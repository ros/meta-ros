image: crops/poky:debian-12

variables:
  DISTRO:
    description: "The Robot Operating System"
    value: "ros2"
    options:
      - ros
      - ros2
  ROS_DISTRO:
    description: "The ROS distro"
    value: rolling
    options:
      - melodic
      - humble
      - jazzy
      - kilted
      - rolling
  OE_RELEASE_SERIES:
    description: "The Yocto Project release"
    value: master
    options:
      - kirkstone
      - scarthgap
      - styhead
      - master
  TARGET_RECIPE: "ros-image-core"
  MACHINE:
    description: "The Yocto Board Support Package"
    value: "raspberrypi5"
    options:
      - "qemux86-64"
      - "raspberrypi4-64"
      - "raspberrypi5"
  GITLAB_REDIRECT:
    description: "Redirect git requests for GitHub back to GitLab"
    value: Disabled
    options:
      - Enabled
      - Disabled
  FF_DISABLE_UMASK_FOR_DOCKER_EXECUTOR: true

.default:
  stage: build
  interruptible: true
  variables:
    KAS_WORK_DIR: $CI_PROJECT_DIR/work
    KAS_BUILD_DIR: $KAS_WORK_DIR/build
    KAS_REPO_REF_DIR: $CI_PROJECT_DIR/repos
    CACHE_DIR: $CI_BUILDS_DIR/persist
    SSTATE_DIR: $CACHE_DIR/sstate
    DL_DIR: $CACHE_DIR/downloads
    TOOLCHAIN_DIR: $CACHE_DIR/toolchains
    IMAGE_DIR: $KAS_BUILD_DIR/tmp/deploy/images
    TOOLCHAIN_LINK_DIR: $KAS_BUILD_DIR/toolchains
  before_script:
    - rm -rf $KAS_WORK_DIR
    - mkdir --verbose --parents $KAS_WORK_DIR $KAS_REPO_REF_DIR $SSTATE_DIR $DL_DIR $TOOLCHAIN_DIR $TOOLCHAIN_LINK_DIR $IMAGE_DIR
    - if [ "$GITLAB_REDIRECT" == "Enabled" ]; then git config --global url."${CI_SERVER_PROTOCOL}://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}:${CI_SERVER_PORT}/github/".insteadOf "git://github.com/"; fi
    - if [ "$GITLAB_REDIRECT" == "Enabled" ]; then git config --global url."${CI_SERVER_PROTOCOL}://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}:${CI_SERVER_PORT}/github/".insteadOf "https://github.com/"; fi


    
build-job:
  stage: build
  extends: .default
  script:
    - virtualenv venv
    - source venv/bin/activate
    - pip3 install kas
    - cd $CI_PROJECT_DIR/kas
    - |
      if [[ -n "$META_ROS_GIT" ]] && [[ -n "$META_ROS_BRANCH" ]]; then
        cat <<EOF > custom-meta-ros.yml
      header:
        version: 14

      repos:
        ros:
          url: "$META_ROS_GIT"
          branch: $META_ROS_BRANCH
      EOF
        EXTRA_KAS_YAML=":custom-meta-ros.yml"
      fi
    - echo kas build --update ${BITBAKE_TARGET:+--target} ${BITBAKE_TARGET} ${BITBAKE_TASK:+-c} ${BITBAKE_TASK} oeros-${OE_RELEASE_SERIES}-${ROS_DISTRO}-${MACHINE}.yml${EXTRA_KAS_YAML} -- ${EXTRA_BITBAKE_ARGS}
    - kas build --update ${BITBAKE_TARGET:+--target} ${BITBAKE_TARGET} ${BITBAKE_TASK:+-c} ${BITBAKE_TASK} oeros-${OE_RELEASE_SERIES}-${ROS_DISTRO}-${MACHINE}.yml${EXTRA_KAS_YAML} -- ${EXTRA_BITBAKE_ARGS}
