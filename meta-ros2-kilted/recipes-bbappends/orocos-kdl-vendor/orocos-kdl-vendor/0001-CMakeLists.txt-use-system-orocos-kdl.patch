diff --git a/CMakeLists.txt b/CMakeLists.txt
index 655e562..c083241 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -4,90 +4,13 @@ project(orocos_kdl_vendor)
 
 find_package(ament_cmake REQUIRED)
 
-option(FORCE_BUILD_VENDOR_PKG
-  "Build orocos_kdl from source, even if system-installed package is available"
-  OFF)
+# Set minimum version to find matching what would be built because PyKDL vendor will require it
+find_package(orocos_kdl 1.5.1 QUIET)
 
-if(NOT FORCE_BUILD_VENDOR_PKG)
-  # Set minimum version to find matching what would be built because PyKDL vendor will require it
-  find_package(orocos_kdl 1.5.1 QUIET)
-endif()
-
-macro(build_orocos_kdl)
-  set(extra_cmake_args)
-  if(DEFINED CMAKE_BUILD_TYPE)
-    list(APPEND extra_cmake_args -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE})
-  endif()
-  if(DEFINED CMAKE_TOOLCHAIN_FILE)
-    list(APPEND extra_cmake_args "-DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}")
-    if(ANDROID)
-      if(DEFINED ANDROID_ABI)
-        list(APPEND extra_cmake_args "-DANDROID_ABI=${ANDROID_ABI}")
-      endif()
-      if(DEFINED ANDROID_CPP_FEATURES)
-        list(APPEND extra_cmake_args "-DANDROID_CPP_FEATURES=${ANDROID_CPP_FEATURES}")
-      endif()
-      if(DEFINED ANDROID_FUNCTION_LEVEL_LINKING)
-        list(APPEND extra_cmake_args "-DANDROID_FUNCTION_LEVEL_LINKING=${ANDROID_FUNCTION_LEVEL_LINKING}")
-      endif()
-      if(DEFINED ANDROID_NATIVE_API_LEVEL)
-        list(APPEND extra_cmake_args "-DANDROID_NATIVE_API_LEVEL=${ANDROID_NATIVE_API_LEVEL}")
-      endif()
-      if(DEFINED ANDROID_NDK)
-        list(APPEND extra_cmake_args "-DANDROID_NDK=${ANDROID_NDK}")
-      endif()
-      if(DEFINED ANDROID_STL)
-        list(APPEND extra_cmake_args "-DANDROID_STL=${ANDROID_STL}")
-      endif()
-      if(DEFINED ANDROID_TOOLCHAIN_NAME)
-        list(APPEND extra_cmake_args "-DANDROID_TOOLCHAIN_NAME=${ANDROID_TOOLCHAIN_NAME}")
-      endif()
-    endif()
-  else()
-    list(APPEND extra_cmake_args "-DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}")
-  endif()
-  list(APPEND extra_cmake_args "-DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}")
-  list(APPEND extra_cmake_args "-DENABLE_TESTS=OFF")
-  list(APPEND extra_cmake_args "-DENABLE_EXAMPLES=OFF")
-
-  include(ExternalProject)
-
-  # Build orocos_kdl
-  externalproject_add(orocos_kdl-507de66
-    GIT_REPOSITORY https://github.com/orocos/orocos_kinematics_dynamics.git
-    GIT_TAG 507de66205e14b12c8c65f25eafc05c4dc66e21e  # 1.5.1 + yet-to-be-released commits
-    GIT_CONFIG advice.detachedHead=false
-    # Suppress git update due to https://gitlab.kitware.com/cmake/cmake/-/issues/16419
-    # See https://github.com/ament/uncrustify_vendor/pull/22 for details
-    UPDATE_COMMAND ""
-    TIMEOUT 600
-    SOURCE_SUBDIR orocos_kdl
-    CMAKE_ARGS
-      -DCMAKE_INSTALL_PREFIX=${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}_install
-      ${extra_cmake_args}
-    PATCH_COMMAND
-      ${CMAKE_COMMAND} -E chdir <SOURCE_DIR> git apply -p1 --ignore-space-change --whitespace=nowarn
-        ${CMAKE_CURRENT_SOURCE_DIR}/0001-include_project_name.patch
-  )
-
-  # The external project will install to the build folder, but we'll install that on make install.
-  install(
-    DIRECTORY
-      ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}_install/
-    DESTINATION
-      ${CMAKE_INSTALL_PREFIX}
-    USE_SOURCE_PERMISSIONS
-  )
-endmacro()
-
-if(NOT orocos_kdl_FOUND)
-  message(STATUS "Did not find orocos-kdl installation, building from source")
-  build_orocos_kdl()
-endif()
-
-if(BUILD_TESTING)
-  find_package(ament_lint_auto REQUIRED)
-  ament_lint_auto_find_test_dependencies()
+if(orocos_kdl_FOUND)
+  message(STATUS "Found orocos-kdl ${KDL_VERSION}")
+else()
+  message(FATAL_ERROR "orocos-kdl not found -- missing from DEPENDS?")
 endif()
 
 ament_package(CONFIG_EXTRAS "orocos_kdl_vendor-extras.cmake")
