# noetic/ros-distro-recipe-blacklist.inc
#
# Copyright (c) 2020-2021 LG Electronics, Inc.

PNBLACKLIST[abb-irb2400-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: depends on moveit-ros-visualization->ogre which is not available', '', d)}"
PNBLACKLIST[abb-irb2400-support] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[abb-irb4400-support] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[abb-irb5400-support] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[abb-irb6600-support] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[abb-irb6640-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: depends on moveit-ros-visualization->ogre which is not available', '', d)}"
PNBLACKLIST[abb-irb6640-support] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[abb] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires abb-irb6640-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: depends on abb-irb2400-moveit-config->ogre which is not available', '', d)}"
PNBLACKLIST[actionlib-lisp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[actionlib-tools] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python3-wxgtk4.0', 'python3-wxgtk4.0: Depends on unavailable ROS_UNRESOLVED_DEP-python3-wxgtk4.0', '', d)}"
PNBLACKLIST[adi-driver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires meta-qt5 to be included and rqt-plot->python-qt-binding which requires pyqt5; ogre: depends on (rviz-imu-plugin,rviz) which depends on ogre which is not available', '', d)}"
PNBLACKLIST[agni-tf-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[ainstein-radar-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo-ros, gazebo which is not available', '', d)}"
PNBLACKLIST[ainstein-radar-rviz-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[ainstein-radar] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires ainstein-radar-rviz-plugins->qtbase which requires meta-qt5 to be included and rdepends on ainstein-radar-gazebo-plugins which requires gazebo', '', d)}"
PNBLACKLIST[aruco-detect] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-deps', 'Depends on unavailable ROS_UNRESOLVED_DEP-python-cairosvg and ROS_UNRESOLVED_DEP-python-joblib', '', d)}"
PNBLACKLIST[asmach-tutorials] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires turtlesim->qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[assimp-devel] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'assimp-devel', 'assimp-devel: do_compile task fails: does not respect sysroot prefix for download_unpack_build.mk assimp-devel/2.1.13-1-r0/git/Makefile:21: /opt/ros/melodic/share/mk/download_unpack_build.mk: No such file or directory', '', d)}"
PNBLACKLIST[ati-force-torque] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'gazebo: Depends on gazebo-ros which is not available', '', d)}"
PNBLACKLIST[audibot-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo-ros, gazebo which is not available', '', d)}"
PNBLACKLIST[audibot] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, audibot-gazebo which is not available', '', d)}"
PNBLACKLIST[audio-capture] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gst-ugly', 'Depends on gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[audio-common] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['gst-ugly', 'python-gi'], 'gst-ugly: Depends on sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-gi: Depends on unavailable python-gi', '', d)}"
PNBLACKLIST[audio-play] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gst-ugly', 'Depends on gstreamer1.0-plugins-ugly which requires commercial license', '', d)}"
PNBLACKLIST[audio-to-spectrogram] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['gst-ugly', 'x11'], 'gst-ugly: Depends on audio-capture which depends on gstreamer1.0-plugins-ugly which requires commercial license; x11: Depends on image-view which depends on gtk+->x11', '', d)}"
PNBLACKLIST[azure-iot-sdk-c] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'networking', 'networking: depends on wolfssl from meta-networking', '', d)}"
PNBLACKLIST[bayesian-belief-networks] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'bayesian-belief-networks', 'bayesian-belief-networks: do_compile task fails: does not respect sysroot prefix for git_checkout.mk: bayesian-belief-networks/2.1.13-1-r0/git/Makefile.bayesian:15: /opt/ros/melodic/share/mk/git_checkout.mk: No such file or directory', '', d)}"
PNBLACKLIST[blender-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[calibration-estimation] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-scipy', 'Depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[calibration] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-scipy', 'Depends on calibration-estimation->unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[camera-aravis] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'aravis', 'aravis: depends on unavailable ROS_UNRESOLVED_DEP-aravis', '', d)}"
PNBLACKLIST[canopen-402] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'canopen-master', 'canopen-master: depends on canopen-master which fails to compile', '', d)}"
PNBLACKLIST[canopen-chain-node] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'canopen-master', 'canopen-master: depends on canopen-master which fails to compile', '', d)}"
PNBLACKLIST[canopen-master] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'canopen-master', 'canopen-master: do_compile task fails: CMakeFiles/canopen_bcm_sync.dir/src/bcm_sync.cpp.o: undefined reference to symbol pthread_join@@GLIBC_2.2.5, libpthread.so.0: error adding symbols: DSO missing from command line', '', d)}"
PNBLACKLIST[canopen-motor-node] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'muparser', 'Depends on unavailable ROS_UNRESOLVED_DEP-muparser', '', d)}"
PNBLACKLIST[cartographer-rviz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[catkin-virtualenv] ?= "Requires Python 3; it is not used by any other ROS 1 package."
PNBLACKLIST[cis-camera] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly', 'python-scipy'], 'qt5: Requires jsk-rviz-plugins->rviz which requires meta-qt5 to be included; gst-ugly: Depends on jsk-rviz-plugins->jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-scipy: Depends on jsk-rviz-plugins->jsk-topic-tools which depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[cl-tf2] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[cl-tf] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[cl-transforms-stamped] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[cl-transforms] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[cl-urdf] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[cl-utils] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[cmvision] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'x11', 'x11: Depends on wxwidgets and fltk which require x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[cob-android-script-server] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-script-server->cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-android] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-android-script-server->cob-script-server->cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-base-drive-chain] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'cob-generic-can', 'cob-generic-can: depends on cob-generic-can which fails to compile', '', d)}"
PNBLACKLIST[cob-canopen-motor] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'cob-generic-can', 'cob-generic-can: depends on cob-generic-can which fails to compile', '', d)}"
PNBLACKLIST[cob-cartesian-controller] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-script-server->cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-collision-monitor] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[cob-command-gui] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-script-server->cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-command-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'multimedia', 'pyqt5'], 'Requires cob-dashboard->rqt-gui->qt-gui->qtbase which requires meta-qt5 to be included and depends on cob-mimic, cob-sound->vlc which requires meta-multimedia to be included and cob-dashboard->rqt-robot-dashboard->python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[cob-common] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, cob-description, raw-description which is not available', '', d)}"
PNBLACKLIST[cob-control] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires (cob-cartesian-controller,cob-twist-controller)->cob-script-server->cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-dashboard] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-gui->qt-gui->qtbase which requires meta-qt5 to be included and rqt-robot-dashboard->python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[cob-default-robot-behavior] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-script-server->cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[cob-driver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-elmo-homing] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'canopen-master', 'canopen-master: depends on canopen-master which fails to compile', '', d)}"
PNBLACKLIST[cob-extern] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidgets', 'libphidgets: depends on libphidgets which fails to compile', '', d)}"
PNBLACKLIST[cob-gazebo-objects] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[cob-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, cob-gazebo-ros-control which is not available', '', d)}"
PNBLACKLIST[cob-gazebo-ros-control] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[cob-gazebo-worlds] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[cob-generic-can] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'cob-generic-can', 'cob-generic-can: do_compile task fails: does not respect sysroot prefix for libpcan.so: ninja: error: /opt/ros/melodic/lib/libpcan.so, needed by /jenkins/mjansa/build/ros/ros1-melodic-thud/tmp-glibc/work/core2-64-oe-linux/cob-generic-can/0.7.1-1-r0/devel/lib/libcob_generic_can_peaksysusb.so, missing and no known rule to make it', '', d)}"
PNBLACKLIST[cob-grasp-generation] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, cob-description which is not available', '', d)}"
PNBLACKLIST[cob-hardware-config] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, cob-description, raw-description which is not available', '', d)}"
PNBLACKLIST[cob-helper-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-script-server->cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-interactive-teleop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[cob-manipulation] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo', 'ogre'], 'qt5: Requires cob-moveit-bringup->moveit-ros-visualization->moveit-setup-assistant->qtbase which requires meta-qt5 to be included; ogre: Requires cob-moveit-bringup->moveit-ros-visualization which requires ogre which is not available; gazebo: rdepends on cob-grasp-generation which requires gazebo', '', d)}"
PNBLACKLIST[cob-mapping-slam] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires cob-navigation-global->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[cob-mimic] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-monitoring] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-script-server->cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-moveit-bringup] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo', 'ogre'], 'qt5: Requires moveit-ros-visualization->moveit-setup-assistant->qtbase which requires meta-qt5 to be included; ogre: Requires cob-moveit-bringup->moveit-ros-visualization which requires ogre which is not available; gazebo: rdepends on cob-hardware-config which requires gazebo', '', d)}"
PNBLACKLIST[cob-moveit-interface] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'multimedia', 'vlc'], 'Depends on moveit-commander->moveit-ros-planning-interface->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and depends on cob-script-server which requires cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-navigation-global] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[cob-navigation-local] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[cob-navigation-slam] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[cob-navigation] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: Requires cob-navigation-(local,global,slam)->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[cob-obstacle-distance-moveit] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'cob-obstacle-distance-moveit'], 'Depends on moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11; cob-obstacle-distance-moveit: do_compile task fails: cob-obstacle-distance-moveit/0.7.3-1-r0/git/include/cob_obstacle_distance_moveit/obstacle_distance_moveit.h:58:63: error: type/value mismatch at argument 1 in template parameter list for template<class _Tp> class std::shared_ptr', '', d)}"
PNBLACKLIST[cob-obstacle-distance] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[cob-phidget-em-state] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidgets', 'libphidgets: depends on libphidgets which fails to compile', '', d)}"
PNBLACKLIST[cob-phidget-power-state] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidgets', 'libphidgets: depends on libphidgets which fails to compile', '', d)}"
PNBLACKLIST[cob-phidgets] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidgets', 'libphidgets: depends on libphidgets which fails to compile', '', d)}"
PNBLACKLIST[cob-script-server] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-sound] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-teleop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-twist-controller] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['multimedia', 'vlc'], 'Requires cob-script-server->cob-mimic, cob-sound->vlc which requires meta-multimedia to be included', '', d)}"
PNBLACKLIST[cob-voltage-control] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidgets', 'libphidgets: depends on cob-phidgets->libphidgets which fails to compile', '', d)}"
PNBLACKLIST[code-coverage] ?= "Depends on unavailable ROS_UNRESOLVED_DEP-lcov"
PNBLACKLIST[codec-image-transport] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['ffmpeg', 'x264'], 'ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license', '', d)}"
PNBLACKLIST[collada-urdf-jsk-patch] ?= "Depends on unavailable ROS_UNRESOLVED_DEP-python-catkin-tools"
PNBLACKLIST[common-tutorials] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires turtle-actionlib->turtlesim->qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[control-box-rst] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'coinor-libipopt', 'Depends on unavailable ROS_UNRESOLVED_DEP-coinor-libipopt-dev', '', d)}"
PNBLACKLIST[cpr-multimaster-tools] ?= "Depends on multimaster-launch->master-discovery-fkie->unavailable ROS_UNRESOLVED_DEP-python-avahi"
PNBLACKLIST[darknet-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'x11', 'x11: Depends on libx11, libxt, libxext which require x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[dataspeed-pds-lcm] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lcm', 'lcm: Depends on lcm which is provided by meta-uav which is not included', '', d)}"
PNBLACKLIST[dataspeed-pds-rqt] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[dataspeed-pds] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lcm', 'lcm: Depends on dataspeed-pds-lcm which depends on lcm which is provided by meta-uav which is not included', '', d)}"
PNBLACKLIST[dccomms-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'dccomms-ros', 'dccomms-ros: do_configure tasks fails: fails to cross-compile bundled network simulator with waf triggered from CMake, using separate recipe for ns-3 might work better', '', d)}"
PNBLACKLIST[desistek-saga-control] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, desistek-saga-description which is not available', '', d)}"
PNBLACKLIST[desistek-saga-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[desistek-saga-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, desistek-saga-description which is not available', '', d)}"
PNBLACKLIST[desktop-full] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires desktop, simulators->ros-tutorials, rqt-robot-plugins->turtlesim->qtbase which requires meta-qt5 to be included and rdepends on urdf-sim-tutorial, simulators which require gazebo', '', d)}"
PNBLACKLIST[desktop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'python-deps'], 'Requires ros-tutorials->turtlesim->qtbase which requires meta-qt5 to be included and depends on viz->rqt-robot-plugins->rqt-pose-view->unavailable ROS_UNRESOLVED_DEP-python-opengl, rqt-common-plugins->rqt-bag-plugins->unavailable ROS_UNRESOLVED_DEP-python-cairo', '', d)}"
PNBLACKLIST[dialogflow-task-executive] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-dialogflow-pip', 'Depends on python-dialogflow-pip which is not available', '', d)}"
PNBLACKLIST[dijkstra-mesh-planner] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt'], 'qt5: depends on mesh-map which depends on mesh-client which depends on lvr2 which requires qtbase which requires meta-qt5 to be included; vtk-qt: depends on mesh-map which depends on mesh-client which depends on lvr2 which requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[dingo-desktop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on dingo-viz which depends on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: Depends on dingo-viz which depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[dingo-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'gazebo: Depends on gazebo-ros, ridgeback-gazebo-plugins, gazebo-plugins, gazebo-ros-control, hector-gazebo-plugins which depend on gazebo, which is not available', '', d)}"
PNBLACKLIST[dingo-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'gazebo: Depends on dingo-gazebo which depends on gazebo-ros, ridgeback-gazebo-plugins, gazebo-plugins, gazebo-ros-control, hector-gazebo-plugins which depend on gazebo, which is not available', '', d)}"
PNBLACKLIST[dingo-viz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: Depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[distance-map-rviz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[distance-map] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires distance-map-rviz->qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[dockeros] ?= "Depends on unavailable ROS_UNRESOLVED_DEP-python-docker"
PNBLACKLIST[downward] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'downward', 'downward: do_compile task fails: uses ExternalProject to fetch http://cdn.rawgit.com/jsk-ros-pkg/archives/master/Fast-Downward-f33d3b65601f.tar.gz and needs bison-native dependency for: cannot build validator: bison not found', '', d)}"
PNBLACKLIST[drone-assets] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo-ros, gazebo which is not available', '', d)}"
PNBLACKLIST[drone-wrapper] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, turtlebot3-gazebo which is not available', '', d)}"
PNBLACKLIST[dynamic-graph-python] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'dynamic-graph-python', 'dynamic-graph-python: do_configure task fails: ', '', d)}"
PNBLACKLIST[dynamic-graph-tutorial] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'dynamic-graph-python', 'dynamic-graph-python: depends on dynamic-graph-python which fails in do_configure task', '', d)}"
PNBLACKLIST[dynamixel-workbench-single-manager-gui] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'qt5: depends on qtbase; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[dynamixel-workbench] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires dynamixel-workbench-single-manager-gui->qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[easy-markers] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[eca-a9-control] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-scipy', 'Rdepends on uuv-trajectory-control which rdepends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[eca-a9-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[eca-a9-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, eca-a9-description which is not available', '', d)}"
PNBLACKLIST[ergodic-exploration] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[eus-assimp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted euslisp, roseus', '', d)}"
PNBLACKLIST[euscollada] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'assimp-devel', 'assimp-devel: depends on assimp-devel which fails to compile', '', d)}"
PNBLACKLIST[euslime] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on slime-ros and roseus which depend on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[euslisp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[eusurdf] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[executive-smach-visualization] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'wxpython', 'Depends on smach-viewer->wxpython which does not build: ld: cannot find -lwx_gtk3u_xrc-3.0', '', d)}"
PNBLACKLIST[exotica-aico-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[exotica-cartpole-dynamics-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[exotica-collision-scene-fcl-latest] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[exotica-collision-scene-fcl] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'exotica-collision-scene-fcl'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; exotica-collision-scene-fcl: do_compile task fails: exotica-collision-scene-fcl/5.1.3-3-r0/git/include/exotica_collision_scene_fcl/collision_scene_fcl.h:36:10: fatal error: fcl/BVH/BVH_model.h: No such file or directory', '', d)}"
PNBLACKLIST[exotica-core-task-maps] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; x11: depends on exotica-core which depends on moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[exotica-core] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[exotica-ddp-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; ', '', d)}"
PNBLACKLIST[exotica-double-integrator-dynamics-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[exotica-dynamics-solvers] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on exotica-cartpole-dynamics-solver,exotica-double-integrator-dynamics-solver,exotica-quadrotor-dynamics-solver,exotica-pendulum-dynamics-solver,exotica-pinocchio-dynamics-solver->exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[exotica-examples] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'python-scipy', 'qt5', 'pyqt5', 'ogre', 'exotica-collision-scene-fcl'], 'opengl: Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; x11: exotica-core->moveit-ros-perception->freeglut which requires x11; python-scipy: depends on exotica-scipy-solver which depends on python-scipy which is not available; qt5: pyqt5: depends on rviz which depends on python-qt-binding which requires meta-qt5 to be included; ogre: depends on rviz which depends on ogre which is not available; exotica-collision-scene-fcl: depends on exotica-collision-scene-fcl which fails to compile', '', d)}"
PNBLACKLIST[exotica-ik-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[exotica-ilqg-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; ', '', d)}"
PNBLACKLIST[exotica-ilqr-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[exotica-levenberg-marquardt-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[exotica-ompl-control-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[exotica-ompl-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; x11: depends on exotica-core which depends on moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[exotica-pendulum-dynamics-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[exotica-pinocchio-dynamics-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[exotica-python] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; x11: depends on exotica-core which depends on moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[exotica-quadrotor-dynamics-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[exotica-scipy-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'python-scipy'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11; python-scipy: Depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[exotica-time-indexed-rrt-connect-solver] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and exotica-core->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[exotica] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'exotica-collision-scene-fcl'], 'opengl: Depends on exotica-core->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; exotica-collision-scene-fcl: depends on exotica-collision-scene-fcl which fails to compile', '', d)}"
PNBLACKLIST[fake-joint-launch] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[fake-joint] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires fake-joint-launch->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[fcl-catkin] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'fcl-catkin', 'fcl-catkin: conflicts with platform fcl, blacklist this one to prevent both being built in world builds', '', d)}"
PNBLACKLIST[fetch-bringup] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre', 'openni2'], 'qt5: Requires fetch-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: Requires fetch-moveit-config->moveit-ros-visualization which requires ogre which is not available; openni2: depends on openni2-launch->openni2-camera->unavailable ROS_UNRESOLVED_DEP-libopenni2-dev', '', d)}"
PNBLACKLIST[fetch-drivers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'fetch-drivers', 'fetch-drivers: do_compile task fails: needs rospack-native dependency to fix make[3]: rospack: Command not found, but rospack-native is not usable yet, because of ros_prefix for native tools moving it outside PATH and also libraries are not found when added to PATH, there is also Makefile.tarball:10: /download_unpack_build.mk: No such file or directory', '', d)}"
PNBLACKLIST[fetch-gazebo-demo] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre', 'gazebo'], 'qt5: Requires fetch-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: Requires fetch-moveit-config->moveit-ros-visualization which requires ogre which is not available; gazebo: depends on gazebo-fetch->gazebo which is not available', '', d)}"
PNBLACKLIST[fetch-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[fetch-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: Requires moveit-ros-visualization which depends on unavailable ogre', '', d)}"
PNBLACKLIST[fetch-ros] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires fetch-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: Requires fetch-moveit-config->moveit-ros-visualization which requires ogre which is not available', '', d)}"
PNBLACKLIST[fetch-simulation] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre', 'gazebo'], 'qt5: Requires fetch-gazebo-demo->fetch-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: Requires fetch-gazebo-demo->fetch-moveit-config->moveit-ros-visualization which requires ogre which is not available; gazebo: rdepends on fetch-gazebo-demo, fetchit-challenge, fetch-gazebo which require gazebo', '', d)}"
PNBLACKLIST[fetch-tools] ?= "Rdepends on unavailable ROS_UNRESOLVED_DEP-python-catkin-lint, ROS_UNRESOLVED_DEP-python-argcomplete"
PNBLACKLIST[fetchit-challenge] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[ff] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ff', 'ff: do_compile task fails: needs rospack-native dependency to fix make: rospack: Command not found, but rospack-native is not usable yet, because of ros_prefix for native tools moving it outside PATH and also libraries are not found when added to PATH, there is also ff/2.1.13-1-r0/git/Makefile:10: /download_unpack_build.mk: No such file or directory', '', d)}"
PNBLACKLIST[ffha] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ffha', 'ffha: do_compile task fails: needs rospack-native dependency to fix make: rospack: Command not found, but rospack-native is not usable yet, because of ros_prefix for native tools moving it outside PATH and also libraries are not found when added to PATH, there is also ffha/2.1.13-1-r0/git/Makefile:10: /download_unpack_build.mk: No such file or directory', '', d)}"
PNBLACKLIST[fiducials] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-deps', 'depends on aruco-detect->unavailable ROS_UNRESOLVED_DEP-python-cairosvg and ROS_UNRESOLVED_DEP-python-joblib', '', d)}"
PNBLACKLIST[find-object-2d] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[fkie-master-discovery] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python3-protobuf', 'python3-protobuf: Old protobuf 3.6.1 used by webOS OSE is not compatible with current python3-protobuf version', '', d)}"
PNBLACKLIST[fkie-master-sync] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python3-protobuf', 'python3-protobuf: Old protobuf 3.6.1 used by webOS OSE is not compatible with current python3-protobuf version', '', d)}"
PNBLACKLIST[fkie-multimaster-msgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python3-protobuf', 'python3-protobuf: Old protobuf 3.6.1 used by webOS OSE is not compatible with current python3-protobuf version', '', d)}"
PNBLACKLIST[fkie-multimaster] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on fkie-node-manager which requires rqt-configure, rqt-gui which require meta-qt5 to be included; ogre: Depends on fkie-node-manager which requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[fkie-node-manager-daemon] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python3-protobuf', 'python3-protobuf: Old protobuf 3.6.1 used by webOS OSE is not compatible with current python3-protobuf version', '', d)}"
PNBLACKLIST[fkie-node-manager] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Requires rqt-configure, rqt-gui which require meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[fkie-potree-rviz-plugin] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[fmi-adapter-examples] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'fmi-adapter'], 'Requires rqt-plot->python-qt-binding which requires meta-qt5 to be included rqt-plot->python-qt-binding which requires pyqt5; fmi-adapter: depends on fmi-adapter which fails to compile', '', d)}"
PNBLACKLIST[fmi-adapter] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'fmi-adapter', 'fmi-adapter: do_compile task fails: needs a fix from ROS2 ninja: error: FMILibraryProject-prefix/src/install/lib/libfmilib.a, needed by /jenkins/mjansa/build/ros/ros1-melodic-thud/tmp-glibc/work/core2-64-oe-linux/fmi-adapter/1.0.3-1-r0/devel/lib/fmi_adapter/node, missing and no known rule to make it', '', d)}"
PNBLACKLIST[franka-example-controllers] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires panda-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: depends on panda-moveit-config->moveit-ros-visualization->ogre which is not available', '', d)}"
PNBLACKLIST[franka-gazebo] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre', 'gazebo'], 'qt5: Depends on franka-example-controllers which requires panda-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: Depends on franka-example-controllers which depends on panda-moveit-config->moveit-ros-visualization->ogre which is not available; gazebo: Depends on gazebo-ros-control, gazebo-rosdev, gazebo-ros which depend on gazebo which is not available', '', d)}"
PNBLACKLIST[franka-ros] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires panda-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: depends on panda-moveit-config->moveit-ros-visualization->ogre which is not available', '', d)}"
PNBLACKLIST[freenect-camera] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'opengl: Depends on libfreenect which is not available because of missing opengl in DISTRO_FEATURES; x11: Depends on libfreenect which is not available because of missing x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[freenect-launch] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'opengl: Depends on freenect-camera which depends on libfreenect which is not available because of missing opengl in DISTRO_FEATURES; x11: Depends on freenect-camera which depends on libfreenect which is not available because of missing x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[freenect-stack] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'opengl: Depends on freenect-camera which depends on libfreenect which is not available because of missing opengl in DISTRO_FEATURES; x11: Depends on freenect-camera which depends on libfreenect which is not available because of missing x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[freight-bringup] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'fetch-drivers', 'fetch-drivers: depends on fetch-drivers which fails to compile', '', d)}"
PNBLACKLIST[fsrobo-r-bringup] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre', 'gazebo'], 'qt5: Requires fsrobo-r-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: Requires fsrobo-r--moveit-config->moveit-ros-visualization which requires ogre which is not available; gazebo: depends on fsrobo-r-description->gazebo which is not available', '', d)}"
PNBLACKLIST[fsrobo-r-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[fsrobo-r-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre', 'gazebo'], 'qt5: Requires moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: Requires moveit-ros-visualization which requires ogre which is not available; gazebo: depends on fsrobo-r-description->gazebo which is not available', '', d)}"
PNBLACKLIST[fsrobo-r-trajectory-filters] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-planning->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[fsrobo-r] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre', 'gazebo'], 'qt5: Requires fsrobo-r-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: Requires fsrobo-r-moveit-config->moveit-ros-visualization which requires ogre which is not available; gazebo: depends on fsrobo-r-description->gazebo which is not available', '', d)}"
PNBLACKLIST[fuse-ros] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on fuse-viz which depends on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: Depends on fuse-viz which depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[fuse-viz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: Depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-rosdev which is not available', '', d)}"
PNBLACKLIST[gazebo-ros-control-select-joints] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'gazebo: Depends on gazebo-ros, gazebo which is not available', '', d)}"
PNBLACKLIST[gazebo-ros-control] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[gazebo-ros-pkgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[gazebo-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[gazebo-rosdev] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[gazebo-video-monitor-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo-ros, gazebo which is not available', '', d)}"
PNBLACKLIST[gazebo-video-monitors] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'gazebo: Depends on gazebo-video-monitor-plugins which depends on gazebo-ros, gazebo which is not available', '', d)}"
PNBLACKLIST[gdrive-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pydrive-pip', 'Depends on pydrive-pip which is not available', '', d)}"
PNBLACKLIST[geneus] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[genlisp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[geometry-tutorials] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires (turtle-tf,turtle-tf2)->turtlesim->qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[gl-dependency] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt5-bindings-gl which requires meta-qt5 to be included and python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[grid-map-demos] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires grid-map-rviz-plugin->rviz->python-qt-bindings->pyqt5->qtbase which requires meta-qt5 to be included; ogre: Requires grid-map-rviz-plugin->rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[grid-map-rviz-plugin] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[grid-map] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires (grid-map-demos,grid-map-rviz-plugin)->rviz->python-qt-bindings->pyqt5->qtbase which requires meta-qt5 to be included; ogre: Requires grid-map-rviz-plugin->rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[gundam-robot] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires gundam-rx78-control which requires ros-controllers->rqt-joint-trajectory-controller->rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included and rdepends on gundam-rx78-gazebo which requires gazebo', '', d)}"
PNBLACKLIST[gundam-rx78-control] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires ros-controllers->rqt-joint-trajectory-controller->rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included and ros-controllers->rqt-joint-trajectory-controller->rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[gundam-rx78-description] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[gundam-rx78-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros, gundam-rx78-control, gazebo-plugins, gazebo-ros-control which is not available', '', d)}"
PNBLACKLIST[h264-encoder-core] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['ffmpeg', 'x264'], 'ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license', '', d)}"
PNBLACKLIST[h264-video-encoder] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['ffmpeg', 'x264'], 'ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license', '', d)}"
PNBLACKLIST[handeye] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-scipy', 'Depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[haros-catkin] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted catkin-virtualenv', '', d)}"
PNBLACKLIST[hdf5-map-io] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'hdf5-map-io', 'hdf5-map-io: do_configure task fails: ', '', d)}"
PNBLACKLIST[hector-components-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'gazebo: depends on hector-gazebo-thermal-camera which depends on gazebo which is not available', '', d)}"
PNBLACKLIST[hector-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[hector-gazebo-thermal-camera] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[hector-gazebo-worlds] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[hector-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, hector-gazebo-worlds, hector-gazebo-plugins, hector-gazebo-thermal-camera which is not available', '', d)}"
PNBLACKLIST[hector-geotiff-launch] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt4', 'qt4: depends on hector-geotiff and hector-geotiff-plugins which require libqt4-dev which requires meta-qt4 to be included', '', d)}"
PNBLACKLIST[hector-geotiff-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt4', 'Requires libqt4-dev which requires meta-qt4 to be included', '', d)}"
PNBLACKLIST[hector-geotiff] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt4', 'Requires libqt4-dev which requires meta-qt4 to be included', '', d)}"
PNBLACKLIST[hector-localization] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'hector-pose-estimation-core', 'hector-pose-estimation-core: depends on hector-pose-estimation-core whcih fails in do_compile', '', d)}"
PNBLACKLIST[hector-models] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'gazebo: depends on hector-sensors-description which depends on velodyne-gazebo-plugins and hector-gazebo-thermal-camera which depend on gazebo which is not available', '', d)}"
PNBLACKLIST[hector-pose-estimation-core] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'hector-pose-estimation-core', 'hector-pose-estimation-core: do_compile task fails: ', '', d)}"
PNBLACKLIST[hector-pose-estimation] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'hector-pose-estimation-core', 'hector-pose-estimation-core: depends on hector-pose-estimation-core whcih fails in do_compile', '', d)}"
PNBLACKLIST[hector-sensors-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'gazebo: depends on velodyne-gazebo-plugins and hector-gazebo-thermal-camera which depend on gazebo which is not available', '', d)}"
PNBLACKLIST[hector-sensors-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, hector-gazebo-plugins, gazebo-plugins which is not available', '', d)}"
PNBLACKLIST[hector-slam-launch] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt4', 'Requires libqt4-dev which requires meta-qt4 to be included', '', d)}"
PNBLACKLIST[hector-slam] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt4', 'Requires libqt4-dev which requires meta-qt4 to be included', '', d)}"
PNBLACKLIST[heifu-bringup] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['x11', 'heifu-ros-utils'], 'x11: Depends on heifu-tools which depends on image-view which depends on gtk+->x11; heifu-ros-utils: depends on heifu-safety, heifu-mavros which depend on unavailable ros-utils from https://gitlab.pdmfc.com/drones/ros1/drone-generic/tree/master/src/ros_utils', '', d)}"
PNBLACKLIST[heifu-diagnostic] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'heifu-ros-utils', 'heifu-ros-utils: Depends on unavailable ros-utils from https://gitlab.pdmfc.com/drones/ros1/drone-generic/tree/master/src/ros_utils', '', d)}"
PNBLACKLIST[heifu-mavros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'heifu-ros-utils', 'heifu-ros-utils: Depends on unavailable ros-utils from https://gitlab.pdmfc.com/drones/ros1/drone-generic/tree/master/src/ros_utils', '', d)}"
PNBLACKLIST[heifu-safety] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'heifu-ros-utils', 'heifu-ros-utils: Depends on unavailable ros-utils from https://gitlab.pdmfc.com/drones/ros1/drone-generic/tree/master/src/ros_utils', '', d)}"
PNBLACKLIST[heifu-simple-waypoint] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'heifu-ros-utils', 'heifu-ros-utils: Depends on unavailable ros-utils from https://gitlab.pdmfc.com/drones/ros1/drone-generic/tree/master/src/ros_utils', '', d)}"
PNBLACKLIST[heifu-tools] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'x11', 'x11: Depends on image-view which depends on gtk+->x11', '', d)}"
PNBLACKLIST[heron-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'gazebo: Depends on uuv-gazebo-worlds and hector-gazebo-plugins which depend on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[hironx-calibration] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'openni2', 'openni2: depends on openni2-launch->openni2-camera->unavailable ROS_UNRESOLVED_DEP-libopenni2-dev', '', d)}"
PNBLACKLIST[hironx-moveit-config] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'openni2', 'openni2: depends on hironx-ros-bridge which depends on openni2-launch->openni2-camera->unavailable ROS_UNRESOLVED_DEP-libopenni2-dev', '', d)}"
PNBLACKLIST[hironx-ros-bridge] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'openni2', 'openni2: depends on openni2-launch->openni2-camera->unavailable ROS_UNRESOLVED_DEP-libopenni2-dev', '', d)}"
PNBLACKLIST[hpp-fcl] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'hpp-fcl', 'hpp-fcl: do_compile task fails: fcl from ExternalProject fails to detect octomap correctly: hpp-fcl/1.0.1-2-r0/git/hpp-fcl-upstream/include/hpp/fcl/octree.h:196:29: error: missing binary operator before token ( #if OCTOMAP_VERSION_AT_LEAST(1,8,0)', '', d)}"
PNBLACKLIST[hrpsys-ros-bridge] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['python-omniorb', 'qt5', 'pyqt5', 'assimp-devel', 'net-tools'], 'python-omniorb: Depends openhrp3 which depends on unavailable ROS_UNRESOLVED_DEP-python-omniorb; qt5: depends on rqt-gui,rqt-gui-py which depends on qt-gui->qtbase and rqt-robot-(monitor,dashboard) which depends on python-qt-binding which requires meta-qt5 to be included; pyqt5: depends on rqt-gui,rqt-gui-py which depends on qt-gui->python-pyqt5 and rqt-robot-(monitor,dashboard)->python-qt-binding which requires pyqt5; assimp-devel: depends on euscollada which depends on assimp-devel which fails to compile; net-tools: Depends on openhrp3 which depends on unavailable ROS_UNRESOLVED_DEP-net-tools', 'Depends on openhrp3 which depends on unavailable ROS_UNRESOLVED_DEP-atlas, ROS_UNRESOLVED_DEP-jython ROS_UNRESOLVED_DEP-f2c and blacklisted openrtm-aist and on ROS_UNRESOLVED_DEP-libirrlicht-dev, ROS_UNRESOLVED_DEP-procps, ROS_UNRESOLVED_DEP-ipython, ROS_UNRESOLVED_DEP-hostname', d)}"
PNBLACKLIST[hrpsys-tools] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-omniorb', 'python-omniorb: Depends on openrtm-tools which depends openrtm-aist-python, rtshell and openrtm-aist which depend on unavailable ROS_UNRESOLVED_DEP-python-omniorb', 'Depends on hrpsys which depends on openhrp3 which depends on unavailable ROS_UNRESOLVED_DEP-atlas, ROS_UNRESOLVED_DEP-jython ROS_UNRESOLVED_DEP-f2c and blacklisted openrtm-aist and on ROS_UNRESOLVED_DEP-libirrlicht-dev', d)}"
PNBLACKLIST[hrpsys] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-omniorb', 'python-omniorb: Depends openhrp3 which depends on unavailable ROS_UNRESOLVED_DEP-python-omniorb', 'Depends on openhrp3 which depends on unavailable ROS_UNRESOLVED_DEP-atlas, ROS_UNRESOLVED_DEP-jython ROS_UNRESOLVED_DEP-f2c and blacklisted openrtm-aist and on ROS_UNRESOLVED_DEP-libirrlicht-dev', d)}"
PNBLACKLIST[husky-base] ?= "Depends on husky-control->multimaster-launch->master-discovery-fkie->unavailable ROS_UNRESOLVED_DEP-python-avahi"
PNBLACKLIST[husky-bringup] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-scipy', 'Depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[husky-control] ?= "Depends on multimaster-launch->master-discovery-fkie->unavailable ROS_UNRESOLVED_DEP-python-avahi"
PNBLACKLIST[husky-desktop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires husky-rviz->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[husky-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[husky-robot] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-scipy', 'Depends on husky-bringup->unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[husky-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, husky-gazebo which is not available', '', d)}"
PNBLACKLIST[husky-viz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz-imu-plugin->rviz which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[ifm3d-core] ?= "Depends on unavailable libxmlrpc-c++"
PNBLACKLIST[ifm3d] ?= "Depends on ifm3d-core which depends on unavailable libxmlrpc-c++"
PNBLACKLIST[ifopt] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'coinor-libipopt', 'Depends on unavailable ROS_UNRESOLVED_DEP-coinor-libipopt-dev', '', d)}"
PNBLACKLIST[igvc-self-drive-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, hector-gazebo-plugins which is not available', '', d)}"
PNBLACKLIST[igvc-self-drive-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[igvc-self-drive-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[igvc-self-drive-sim] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, igvc-self-drive-gazebo which is not available', '', d)}"
PNBLACKLIST[image-pipeline] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'x11', 'Depends on image-view->gtk+->x11', '', d)}"
PNBLACKLIST[image-view2] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'x11', 'Depends on image-view->gtk+->x11', '', d)}"
PNBLACKLIST[image-view] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'x11', 'Depends on gtk+->x11', '', d)}"
PNBLACKLIST[imagesift] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly', 'python-scipy'], 'qt5: Requires jsk-recognition-utils->qtbase which requires meta-qt5 to be included; gst-ugly: Depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-scipy: Depends on jsk-topic-tools which depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[imu-monitor] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'pr2-description: depends on pr2-mechanism-controllers which depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[imu-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz-imu-plugin->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[industrial-core] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on industrial-trajectory-filters->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and industrial-trajectory-filters->moveit-ros-planning->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[industrial-trajectory-filters] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-planning->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[ipr-extern] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ros-reflexxes', 'ros-reflexxes: depends on ros-reflexxes which fails to compile', '', d)}"
PNBLACKLIST[ira-laser-tools] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'vtk-qt', 'Requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[jackal-desktop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires jackal-viz->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[jackal-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[jackal-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, jackal-gazebo which is not available', '', d)}"
PNBLACKLIST[jackal-tutorials] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted rosdoc-lite', '', d)}"
PNBLACKLIST[jackal-viz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[jderobot-assets] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros, turtlebot3-gazebo which is not available', '', d)}"
PNBLACKLIST[jderobot-camviz] ?= "Expects jderobot header files in wrong directory (/opt/jderobot/include/jderobot/types/image.h) and not compatible with opencv version we're using"
PNBLACKLIST[jderobot-carviz] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'jderobot-carviz', 'jderobot-carviz: do_configure task fails: ', '', d)}"
PNBLACKLIST[jderobot-drones] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'gazebo'], 'qt5: Requires rqt-gui->qt-gui->qtbase which requires meta-qt5 to be included; pyqt5: rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5; gazebo: drone-wrapper depends on gazebo, turtlebot3-gazebo which is not available', '', d)}"
PNBLACKLIST[joint-qualification-controllers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', ['pr2-description'], 'pr2-description: depends on robot-mechanism-controllers which depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[joystick-drivers] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['python-cwiid', 'libspnav'], 'python-cwiid: Depends on wiimote->unavailable ROS_UNRESOLVED_DEP-python-cwiid; libspnav: depends on spacenav-node->ROS_UNRESOLVED_DEP-libspnav-dev', '', d)}"
PNBLACKLIST[jsk-3rdparty] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['gst-ugly', 'julius'], 'gst-ugly: Depends on (voice-text,julius-ros)->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; julius: Depends on julius which fails to compile', '', d)}"
PNBLACKLIST[jsk-common] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly', 'python-scipy'], 'qt5: Requires jsk-tools->rqt-reconfigure->python-qt-binding which requires meta-qt5 to be included; gst-ugly: Depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-scipy: Depends on jsk-topic-tools which depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[jsk-data] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly', 'python-scipy'], 'qt5: Requires rviz which requires meta-qt5 to be included; gst-ugly: Depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-scipy: Depends on jsk-topic-tools which depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[jsk-interactive-marker] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly', 'python-scipy'], 'qt5: Requires rviz which requires meta-qt5 to be included; gst-ugly: Depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-scipy: Depends on jsk-topic-tools which depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[jsk-interactive-test] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly', 'python-scipy'], 'qt5: Requires rviz which requires meta-qt5 to be included; gst-ugly: Depends on jsk-interactive-marker which depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-scipy: Depends on jsk-interactive-marker which depends on jsk-topic-tools which depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[jsk-interactive] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly', 'python-scipy'], 'qt5: Requires jsk-interactive-marker->rviz which requires meta-qt5 to be included; gst-ugly: Depends on jsk-interactive-marker which depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-scipy: Depends on jsk-interactive-marker which depends on jsk-topic-tools which depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[jsk-model-tools] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted eus-assimp', '', d)}"
PNBLACKLIST[jsk-pcl-ros-utils] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly', 'python-scipy'], 'qt5: Requires rviz which requires meta-qt5 to be included; gst-ugly: Depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-scipy: Depends on jsk-topic-tools which depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[jsk-pcl-ros] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly', 'python-scipy'], 'qt5: Requires jsk-recognition-utils->qtbase which requires meta-qt5 to be included; gst-ugly: Depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-scipy: Depends on jsk-topic-tools which depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[jsk-perception] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly', 'python-scipy'], 'qt5: Requires rviz which requires meta-qt5 to be included; gst-ugly: Depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-scipy: Depends on jsk-topic-tools which depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[jsk-planning] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['ff', 'ffha', 'downward', 'lisp', 'wxpython'], 'ff: depends on pddl-planner which depends on ff which fails to compile; ffha: depends on pddl-planner which depends on ffha which fails to compile; downward: depends on pddl-planner which depends on downward which fails to compile; lisp: depends on task-compiler which depends on roseus-smach which depends on blacklisted euslisp, roseus; wxpython: depends on task-compiler which depends on smach-viewer which depends on wxpython which does not build: ld: cannot find -lwx_gtk3u_xrc-3.0', '', d)}"
PNBLACKLIST[jsk-pr2eus] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['gst-ugly', 'lisp'], 'gst-ugly: Depends on pr2eus->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; lisp: depends on blacklisted roseus which depends on geneus, euslisp', '', d)}"
PNBLACKLIST[jsk-recognition-utils] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly', 'python-scipy'], 'qt5: Requires qtbase which requires meta-qt5 to be included; gst-ugly: Depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-scipy: Depends on jsk-topic-tools which depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[jsk-recognition] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly', 'python-scipy'], 'qt5: Requires jsk-recognition-utils->qtbase which requires meta-qt5 to be included; gst-ugly: Depends on jsk-recognition-utils, resized-image-transport, jsk-perception, imagesift, jsk-pcl-ros which depend on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-scipy: Depends on jsk-recognition-utils, resized-image-transport, jsk-perception, imagesift, jsk-pcl-ros which depend on jsk-topic-tools which depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[jsk-roseus] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted geneus, euslisp, roseus', '', d)}"
PNBLACKLIST[jsk-rqt-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'python-deps'], 'Requires rqt-image-view->qtbase which requires meta-qt5 to be included and depends on unavailable ROS_UNRESOLVED_DEP-python-urlgrabber, ROS_UNRESOLVED_DEP-python-sklearn', '', d)}"
PNBLACKLIST[jsk-rviz-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly', 'python-scipy'], 'qt5: Requires rviz which requires meta-qt5 to be included; gst-ugly: Depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-scipy: Depends on jsk-topic-tools which depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[jsk-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly', 'python-scipy'], 'qt5: Requires rqt-reconfigure->python-qt-binding which requires meta-qt5 to be included; gst-ugly: Depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-scipy: Depends on jsk-topic-tools which depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[jsk-topic-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['gst-ugly', 'python-scipy'], 'gst-ugly: Depends on sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-scipy: Depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[jsk-visualization] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly', 'python-scipy'], 'qt5: Requires jsk-rqt-plugins->qtbase which requires meta-qt5 to be included; gst-ugly: Depends on jsk-interactive-marker which depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-scipy: Depends on jsk-interactive-marker which depends on jsk-topic-tools which depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[jskeus] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted euslisp', '', d)}"
PNBLACKLIST[json-transport] ?= "Rdepends on unavailable ROS_UNRESOLVED_DEP-python-msgpack"
PNBLACKLIST[julius-ros] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['gst-ugly', 'julius'], 'gst-ugly: Depends on sound-play->gstreamer1.0-plugins-ugly which requires commercial license; julius: Depends on julius which fails to compile', '', d)}"
PNBLACKLIST[julius] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'julius', 'julius: do_compile task fails: needs rospack-native dependency to fix make[3]: rospack: Command not found, but rospack-native is not usable yet, because of ros_prefix for native tools moving it outside PATH and also libraries are not found when added to PATH, there is also /julius/2.1.13-1-r0/git/Makefile.dictation-kit:14: /download_unpack_build.mk: No such file or directory', '', d)}"
PNBLACKLIST[knowledge-representation] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libpqxx', 'libpqxx: Depends on lcm which is not available', '', d)}"
PNBLACKLIST[kobuki-ftdi] ?= "Not compatible with newer libftdi included in meta-oe: https://github.com/kobuki-base/kobuki_ftdi/issues/3"
PNBLACKLIST[ksql-airport] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[kvh-geo-fog-3d-rviz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires qtbase, qtdeclarative, qtmultimedia, qtsvg which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[kvh-geo-fog-3d] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires kvh-geo-fog-3d-rviz, qtbase, qtdeclarative, qtmultimedia, qtsvg which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[lanelet2-examples] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pugixml', 'Depends on lanelet2-io which depends on pugixml-dev which is not available', '', d)}"
PNBLACKLIST[lanelet2-io] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pugixml', 'Depends on pugixml-dev which is not available', '', d)}"
PNBLACKLIST[lanelet2-projection] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pugixml', 'Depends on lanelet2-io which depends on pugixml-dev which is not available', '', d)}"
PNBLACKLIST[lanelet2-python] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pugixml', 'Depends on lanelet2-io which depends on pugixml-dev which is not available', '', d)}"
PNBLACKLIST[lanelet2-routing] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lanelet2-traffic-rules', 'lanelet2-traffic-rules: depends on lanelet2-traffic-rules which fails in do_configure', '', d)}"
PNBLACKLIST[lanelet2-traffic-rules] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lanelet2-traffic-rules', 'lanelet2-traffic-rules: do_configure task fails: ', '', d)}"
PNBLACKLIST[lanelet2-validation] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pugixml', 'Depends on lanelet2-io which depends on pugixml-dev which is not available', '', d)}"
PNBLACKLIST[lanelet2] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pugixml', 'Rdepends on lanelet2-python, lanelet2-projection, lanelet2-examples which depend on lanelet2-io which depends on pugixml-dev which is not available', '', d)}"
PNBLACKLIST[lauv-control] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, lauv-description which is not available', '', d)}"
PNBLACKLIST[lauv-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[lauv-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, lauv-description which is not available', '', d)}"
PNBLACKLIST[leo-bringup] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['ffmpeg', 'x264'], 'ffmpeg: Depends on web-video-server which depends on ffmpeg which requires commercial license; x264: Depends on web-video-server which depends on ffmpeg which depends on x264 which requires commercial license', '', d)}"
PNBLACKLIST[leg-detector] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'orocos-bfl', 'Depends on unavailabe ROS_UNRESOLVED_DEP-liborocos-bfl', '', d)}"
PNBLACKLIST[leo-desktop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on leo-viz which depends on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: depends on leo-viz which depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[leo-fw] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-whichcraft', 'Rdepends on python-whichcraft which is not available', '', d)}"
PNBLACKLIST[leo-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'gazebo: Depends on gazebo-ros which depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[leo-robot] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['ffmpeg', 'x264', 'gazebo', 'python-whichcraft'], 'ffmpeg: Depends on leo-bringup which depends on web-video-server which depends on ffmpeg which requires commercial license; x264: Depends leo-bringup which depends on web-video-server which depends on ffmpeg which depends on x264 which requires commercial license; gazebo: Depends on leo-bringup which depends on gazebo-ros which depends on gazebo, gazebo-ros which is not available; python-whichcraft: depends on leo-fw which rdepends on python-whichcraft which is not available', '', d)}"
PNBLACKLIST[leo-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'gazebo: Depends on leo-gazebo which depends on gazebo-ros which depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[leo-viz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[leuze-bringup] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires leuze-description->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[leuze-description] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[leuze-ros-drivers] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires leuze-description->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[libg2o] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'libg2o'], 'Depends on mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; libg2o: do_compile task fails: libg2o/2018.3.25-r0/git/g2o/stuff/opengl_primitives.cpp:27:11: fatal error: GL/glu.h: No such file or directory', '', d)}"
PNBLACKLIST[libphidget21] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidget21', 'libphidget21: do_compile task fails: fetches https://www.phidgets.com/downloads/phidget21/libraries/linux/libphidget/libphidget_2.1.9.20190409.tar.gz with ExternalProject and fails to build it externally', '', d)}"
PNBLACKLIST[libphidgets] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidgets', 'libphidgets: do_compile task fails: fetches https://www.phidgets.com/downloads/phidget21/libraries/linux/libphidget/libphidget_2.1.8.20151217.tar.gz with ExternalProject and fails to build it externally', '', d)}"
PNBLACKLIST[libqt-concurrent] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[libqt-core] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[libqt-gui] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[libqt-network] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[libqt-opengl-rosdev] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[libqt-opengl] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[libqt-rosdev] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[libqt-svg-rosdev] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtsvg which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[libqt-widgets] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[librealsense2] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'glfw'], 'opengl: depends on mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; glfw: Depends on glfw which is not available in zeus and older', '', d)}"
PNBLACKLIST[librviz-tutorial] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[libsiftfast] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libsiftfast', 'libsiftfast: do_compile task fails: needs rospack-native dependency to fix make[3]: rospack: Command not found, but rospack-native is not usable yet, because of ros_prefix for native tools moving it outside PATH and also libraries are not found when added to PATH, there is also libsiftfast/2.1.13-1-r0/git/Makefile:7: /svn_checkout.mk: No such file or directory', '', d)}"
PNBLACKLIST[libuvc-camera] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libuvc-camera', 'libuvc-camera: do_compile task fails: does not respect sysroot prefix for libuvc.so: ninja: error: /usr/lib/libuvc.so, needed by /jenkins/mjansa/build/ros/ros1-melodic-thud/tmp-glibc/work/core2-64-oe-linux/libuvc-camera/0.0.10-1-r0/devel/lib/libuvc_camera/camera_node, missing and no known rule to make it', '', d)}"
PNBLACKLIST[libuvc-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libuvc-camera', 'libuvc-camera: depends on libuvc-camera which fails to compile', '', d)}"
PNBLACKLIST[linux-networking] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires asmach-tutorials->turtlesim->qtbase which requires meta-qt5 to be included', 'depends on multi-interface-roam->unavailable python-twisted-core', d)}"
PNBLACKLIST[log-view] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'xclip', 'Rdepends on xclip which is not available', '', d)}"
PNBLACKLIST[lvr2] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt'], 'Requires qtbase which requires meta-qt5 to be included and requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[map-merge-3d] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'map-merge-3d', 'map-merge-3d: do_compile task fails: map-merge-3d/0.1.1-r0/git/include/map_merge_3d/typedefs.h:8:10: fatal error: pcl/visualization/point_cloud_color_handlers.h: No such file or directory', '', d)}"
PNBLACKLIST[mapviz-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'x11', 'qt-gui-cpp'], 'Requires libqt-rosdev->qtbase which requires meta-qt5 to be included and depends on mapviz->(freeglut, libxmu, libxi) which require x11; qt-gui-cpp: depends on mapviz which rdepends on rqt-gui-cpp which depends on qt-gui-cpp which requires pyqt5-native for sip', '', d)}"
PNBLACKLIST[mapviz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'x11', 'qt-gui-cpp'], 'Requires libqt-rosdev->qtbase which requires meta-qt5 to be included and freeglut, libxmu, libxi which require x11; qt-gui-cpp: rdepends on rqt-gui-cpp which depends on qt-gui-cpp which requires pyqt5-native for sip', '', d)}"
PNBLACKLIST[master-discovery-fkie] ?= "Depends on unavailable ROS_UNRESOLVED_DEP-python-avahi"
PNBLACKLIST[master-sync-fkie] ?= "Depends on master-discovery-fkie->unavailable ROS_UNRESOLVED_DEP-python-avahi"
PNBLACKLIST[mbf-mesh-core] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt'], 'qt5: depends on mesh-map which depends on mesh-client which depends on lvr2 which requires qtbase which requires meta-qt5 to be included; vtk-qt: depends on mesh-map which depends on mesh-client which depends on lvr2 which requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[mbf-mesh-nav] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt'], 'qt5: depends on mesh-map which depends on mesh-client which depends on lvr2 which requires qtbase which requires meta-qt5 to be included; vtk-qt: depends on mesh-map which depends on mesh-client which depends on lvr2 which requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[mcmillan-airfield] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[mecanum-gazebo-plugin] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[mesh-client] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt'], 'qt5: depends on lvr2 which requires qtbase which requires meta-qt5 to be included; vtk-qt: depends on lvr2 which requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[mesh-controller] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt'], 'qt5: depends on mesh-map which depends on mesh-client which depends on lvr2 which requires qtbase which requires meta-qt5 to be included; vtk-qt: depends on mesh-map which depends on mesh-client which depends on lvr2 which requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[mesh-layers] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt'], 'qt5: depends on mesh-map which depends on mesh-client which depends on lvr2 which requires qtbase which requires meta-qt5 to be included; vtk-qt: depends on mesh-map which depends on mesh-client which depends on lvr2 which requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[mesh-map] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt'], 'qt5: depends on mesh-client which depends on lvr2 which requires qtbase which requires meta-qt5 to be included; vtk-qt: depends on mesh-client which depends on lvr2 which requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[mesh-msgs-conversions] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt'], 'qt5: depends on lvr2 which requires qtbase which requires meta-qt5 to be included; vtk-qt: depends on lvr2 which requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[mesh-msgs-hdf5] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'hdf5-map-io', 'hdf5-map-io: depends on hdf5-map-io which fails in do_configure', '', d)}"
PNBLACKLIST[mesh-navigation] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt'], 'qt5: depends on mesh-client which depends on lvr2 which requires qtbase which requires meta-qt5 to be included; vtk-qt: depends on mesh-client which depends on lvr2 which requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[mesh-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: Depends on rviz-map-plugin, rviz-mesh-plugin which require qtbase which requires meta-qt5 to be included; pyqt5: Depends on rviz-map-plugin, rviz-mesh-plugin which requires rviz which depends on pyqt5; ogre: Depends on rviz-map-plugin, rviz-mesh-plugin which requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[mir-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros-control which is not available', '', d)}"
PNBLACKLIST[mir-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, mir-description which is not available', '', d)}"
PNBLACKLIST[mir-gazebo] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires rqt-robot-steering->python-qt-binding which requires meta-qt5 to be included and rdepends on mir-driver, mir-description, gazebo-ros which require gazebo', '', d)}"
PNBLACKLIST[mir-navigation] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, mir-driver which is not available', '', d)}"
PNBLACKLIST[mir-robot] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires mir-gazebo->rqt-robot-steering->python-qt-binding which requires meta-qt5 to be included and rdepends on mir-driver, mir-navigation, mir-description which require gazebo', '', d)}"
PNBLACKLIST[mobile-robot-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'mobile-robot-simulator', 'mobile-robot-simulator: do_compile task fails: ', '', d)}"
PNBLACKLIST[mongodb-log] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['mongodb', 'mongodb-legacy-cxx-driver'], 'Requires mongodb; mongodb-legacy-cxx-driver: depends on mongodb-store which requires unavailable mongo-cxx-driver-legacy', '', d)}"
PNBLACKLIST[mongodb-store] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['mongodb', 'mongodb-legacy-cxx-driver'], 'Requires mongodb; mongodb-legacy-cxx-driver: requires unavailable mongo-cxx-driver-legacy', '', d)}"
PNBLACKLIST[moose-desktop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on moose-viz which depends on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: depends on moose-viz which depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[moose-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'gazebo: Depends on gazebo-ros which depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[moose-simulator] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on moose-gazebo which depends on moose-viz which depends on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: depends on moose-gazebo which depends on moose-viz which depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[moose-viz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[moveit-calibration-gui] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on rviz-visual-tools which requires rviz which requires meta-qt5 to be included; ogre: depends on rviz-visual-tools which depends on ogre which is not available', '', d)}"
PNBLACKLIST[moveit-calibration-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-scipy', 'Depends on handeye which depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[moveit-commander] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'opengl: Depends on moveit-ros-planning-interface->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; x11: depends on moveit-ros-planning-interface which depends on  moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[moveit-fake-controller-manager] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-planning->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[moveit-opw-kinematics-plugin] ?= "Depends on opw-kinematics which depends on unavailable ROS_UNRESOLVED_DEP-cmake-common-scripts"
PNBLACKLIST[moveit-planners-ompl] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[moveit-planners] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-planners-ompl->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-planners-ompl->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[moveit-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-fake-controller-manager->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-fake-controller-manager->moveit-ros-planning->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[moveit-pr2] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'pr2-description'], 'Depends on pr2-moveit-config->moveit-ros-move-group->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and pr2-moveit-config->moveit-ros-move-group->moveit-ros-perception->freeglut which requires x11; pr2-description: depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[moveit-resources-prbt-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: Depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[moveit-resources-prbt-pg70-support] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'muparser', 'Depends on moveit-resources-prbt-support which depends on canopen-motor-node->unavailable ROS_UNRESOLVED_DEP-muparser', '', d)}"
PNBLACKLIST[moveit-resources-prbt-support] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'muparser', 'Depends on canopen-motor-node->unavailable ROS_UNRESOLVED_DEP-muparser', '', d)}"
PNBLACKLIST[moveit-ros-benchmarks] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[moveit-ros-manipulation] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[moveit-ros-move-group] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[moveit-ros-perception] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and freeglut which requires x11', '', d)}"
PNBLACKLIST[moveit-ros-planning-interface] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[moveit-ros-planning] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[moveit-ros-robot-interaction] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-planning->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[moveit-ros-visualization] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires qtbase which requires meta-qt5 to be included; ogre: depends on unavailable ogre', '', d)}"
PNBLACKLIST[moveit-ros-warehouse] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-planning->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[moveit-ros] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: depends on moveit-ros-visualization->ogre which is not available', '', d)}"
PNBLACKLIST[moveit-runtime] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[moveit-servo] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'libspnav'], 'opengl: Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; x11: moveit-ros-perception->freeglut which requires x11; libspnav: depends on spacenav-node which depends on unavailable ROS_UNRESOLVED_DEP-libspnav-dev', '', d)}"
PNBLACKLIST[moveit-setup-assistant] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires qtbase which requires meta-qt5 to be included; ogre: depends on ogre which is not available', '', d)}"
PNBLACKLIST[moveit-sim-controller] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[moveit-visual-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires rviz-visual-tools->rviz which requires meta-qt5 to be included; ogre: depends on rviz-visual-tools->ogre which is not available', '', d)}"
PNBLACKLIST[moveit] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires moveit-ros-visualization->moveit-setup-assistant->qtbase which requires meta-qt5 to be included; ogre: depends on moveit-setup-assistant which requires ogre which is not available', '', d)}"
PNBLACKLIST[movie-publisher] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['ffmpeg', 'x264', 'python-imageio'], 'ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license; python-imageio: Depends on unavailable python-imageio', '', d)}"
PNBLACKLIST[mpc-local-planner-examples] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'coinor-libipopt'], 'opengl: Depends on stage-ros->stage->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; x11: stage-ros->stage->(fltk,gtk+)->x11; coinor-libipopt: rdepends on mpc-local-planner which epends on control-box-rst which depends on unavailable ROS_UNRESOLVED_DEP-coinor-libipopt-dev', '', d)}"
PNBLACKLIST[mpc-local-planner] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'coinor-libipopt', 'Depends on control-box-rst which depends on unavailable ROS_UNRESOLVED_DEP-coinor-libipopt-dev', '', d)}"
PNBLACKLIST[mrp2-desktop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on mrp2-viz which depends on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: depends on mrp2-viz which depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[mrp2-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'gazebo: Depends on gazebo-ros which depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[mrp2-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'gazebo: Depends on mrp2-gazebo which depends on gazebo-ros which depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[mrp2-viz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[mrpt-bridge] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg', 'x264', 'x11'], 'qt5: Requires qtbase which requires meta-qt5 to be included; ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license; x11: Depends on mrpt1->freeglut which requires x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[mrpt-ekf-slam-2d] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg', 'x264', 'x11'], 'qt5: Depends on mrpt-bridge which depends on qtbase which requires meta-qt5 to be included; ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license; x11: Depends on (mrpt-bridge,mrpt1)->freeglut which requires x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[mrpt-ekf-slam-3d] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg', 'x264', 'x11'], 'qt5: Depends on mrpt-bridge which depends on qtbase which requires meta-qt5 to be included; ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license; x11: Depends on (mrpt-bridge,mrpt1)->freeglut which requires x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[mrpt-graphslam-2d] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg', 'x264', 'x11'], 'qt5: Depends on mrpt-bridge which depends on qtbase which requires meta-qt5 to be included; ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license; x11: Depends on (mrpt-bridge,mrpt1)->freeglut which requires x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[mrpt-icp-slam-2d] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg', 'x264', 'x11'], 'qt5: Depends on mrpt-bridge which depends on qtbase which requires meta-qt5 to be included; ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license; x11: Depends on (mrpt-bridge,mrpt1)->freeglut which requires x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[mrpt-local-obstacles] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg', 'x264', 'x11'], 'qt5: Depends on mrpt-bridge which depends on qtbase which requires meta-qt5 to be included; ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license; x11: Depends on (mrpt-bridge,mrpt1)->freeglut which requires x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[mrpt-localization] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg', 'x264', 'x11'], 'qt5: Depends on mrpt-bridge which depends on qtbase which requires meta-qt5 to be included; ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license; x11: Depends on (mrpt-bridge,mrpt1)->freeglut which requires x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[mrpt-map] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg', 'x264', 'x11'], 'qt5: Depends on mrpt-bridge which depends on qtbase which requires meta-qt5 to be included; ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license; x11: Depends on (mrpt-bridge,mrpt1)->freeglut which requires x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[mrpt-navigation] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg', 'x264', 'x11'], 'qt5: Requires mrpt-reactivenav2d, ...->mrpt-bridge->qtbase which requires meta-qt5 to be included; ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license; x11: Depends on (mrpt-bridge,mrpt1)->freeglut which requires x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[mrpt-rawlog] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg', 'x264', 'x11'], 'qt5: Depends on mrpt-bridge which depends on qtbase which requires meta-qt5 to be included; ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license; x11: Depends on (mrpt-bridge,mrpt1)->freeglut which requires x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[mrpt-rbpf-slam] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg', 'x264', 'x11'], 'qt5: Depends on mrpt-bridge which depends on qtbase which requires meta-qt5 to be included; ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license; x11: Depends on (mrpt-bridge,mrpt1)->freeglut which requires x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[mrpt-reactivenav2d] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg', 'x264', 'x11'], 'qt5: Depends on mrpt-bridge which depends on qtbase which requires meta-qt5 to be included; ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license; x11: Depends on (mrpt-bridge,mrpt1)->freeglut which requires x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[mrpt-slam] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg', 'x264', 'x11'], 'qt5: Requires mrpt-ekf-slam-2d, ...->mrpt-bridge->qtbase which requires meta-qt5 to be included; ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license; x11: Depends on (mrpt-bridge,mrpt1)->freeglut which requires x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[mrpt1] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['ffmpeg', 'x264', 'x11'], 'ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license; x11: Depends on freeglut which require x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[mrpt2] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['ffmpeg', 'x264', 'glfw', 'x11'], 'ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license; glfw: Depends on glfw which is not available in zeus and older; x11: Depends on freeglut which require x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[multi-interface-roam] ?= "Depends on unavailable python-twisted-core"
PNBLACKLIST[multi-map-server] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly', 'python-scipy'], 'qt5: Requires jsk-tools->rqt-reconfigure->python-qt-binding which requires meta-qt5 to be included; gst-ugly: Depends on jsk-tools which depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-scipy: Depends on jsk-tools which depends on jsk-topic-tools which depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[multimaster-fkie] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires node-manager-fkie which requires meta-qt5 to be included', 'depends on master-sync-fkie which dependsepends on master-discovery-fkie->unavailable ROS_UNRESOLVED_DEP-python-avahi', d)}"
PNBLACKLIST[multimaster-launch] ?= "Depends on master-discovery-fkie->unavailable ROS_UNRESOLVED_DEP-python-avahi"
PNBLACKLIST[multires-image] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'x11', 'qt-gui-cpp'], 'Requires libqt-rosdev->qtbase which requires meta-qt5 to be included and depends on mapviz->(freeglut, libxmu, libxi) which require x11; qt-gui-cpp: depends on mapviz which rdepends on rqt-gui-cpp which depends on qt-gui-cpp which requires pyqt5-native for sip', '', d)}"
PNBLACKLIST[multisense-bringup] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'multisense-ros', 'multisense-ros: depends on multisense-ros which fails to compile', '', d)}"
PNBLACKLIST[multisense-cal-check] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'multisense-ros', 'multisense-ros: depends on multisense-ros which fails to compile', '', d)}"
PNBLACKLIST[multisense-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'multisense-ros', 'multisense-ros: do_compile task fails: multisense-ros/4.0.3-1-r0/git/include/multisense_ros/color_laser.h:37:10: fatal error: string: No such file or directory #include <string>', '', d)}"
PNBLACKLIST[multisense] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'multisense-ros', 'multisense-ros: depends on multisense-ros which fails to compile', '', d)}"
PNBLACKLIST[mvsim] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg', 'x264', 'x11'], 'qt5: Requires mrpt-bridge->qtbase which requires meta-qt5 to be included; ffmpeg: Depends on (mrpt-bridge,mrpt1)->ffmpeg which requires commercial license; x264: Depends on (mrpt-bridge,mrpt1)->ffmpeg->x264 which requires commercial license; x11: Depends on (mrpt-bridge,mrpt1)->freeglut which requires x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[nanomsg] ?= "It is a catkin-ized edition of the upstream version that is not used by any other ROS 1 package."
PNBLACKLIST[nao-meshes] ?= "Depends on unavailable ROS_UNRESOLVED_DEP-java"
PNBLACKLIST[naoqi-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'naoqi-libqi', 'naoqi-libqi: depends on naoqi-libqi which fails to compile', '', d)}"
PNBLACKLIST[naoqi-libqi] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'naoqi-libqi', 'naoqi-libqi: do_compile task fails: naoqi-libqi/2.9.0-8-r0/git/ka/sha1.hpp:8:10: fatal error: boost/uuid/sha1.hpp: No such file or directory', '', d)}"
PNBLACKLIST[naoqi-libqicore] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'naoqi-libqi', 'naoqi-libqi: depends on naoqi-libqi which fails to compile', '', d)}"
PNBLACKLIST[navigation-experimental] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'sbpl-lattice-planner', 'sbpl-lattice-planner: depends on sbpl-lattice-planner which fails to compile', '', d)}"
PNBLACKLIST[navigation-stage] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'stage-ros'], 'Depends on stage-ros->stage->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and stage-ros->stage->(fltk,gtk+)->x11; stage-ros: depends on stage-ros which fails to compile', '', d)}"
PNBLACKLIST[navigation-tutorials] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'stage-ros'], 'Depends on (navigation-stage,roomba-stage)->stage-ros->stage->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and (navigation-stage,roomba-stage)->stage-ros->stage->(fltk,gtk+)->x11; stage-ros: depends on stage-ros which fails to compile', '', d)}"
PNBLACKLIST[neonavigation-launch] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires trajectory-tracker-rviz-plugins->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[neonavigation-rviz-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires trajectory-tracker-rviz-plugins->qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[neonavigation] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires neonavigation-launch->trajectory-tracker-rviz-plugins->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[nerian-stereo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'nerian-stereo', 'nerian-stereo: do_compile task fails: rospkg.common.ResourceNotFound: nerian_stereo', '', d)}"
PNBLACKLIST[network-autoconfig] ?= "Rdepends on unavailable ROS_UNRESOLVED_DEP-network-manager"
PNBLACKLIST[nextage-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[nextage-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['openni2', 'trac-ik', 'opengl', 'x11', 'qt5', 'ogre'], 'openni2: depends on nextage-ros-bridge, hironx-ros-bridge which depends on openni2-launch->openni2-camera->unavailable ROS_UNRESOLVED_DEP-libopenni2-dev; trac-ik: depends on trac-ik-kinematics-plugin which depends on trac-ik-lib->libnlopt0 which is not available; opengl: depends on moveit-planners, moveit-ros-move-group, moveit-ros-planning-interface which depend on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; x11: depends on moveit-planners-ompl, moveit-ros-perception which depends on freeglut which requires x11; qt5: depends on moveit-ros-visualization which requires meta-qt5 to be included; ogre: depends on moveit-ros-visualization which depends on unavailable ogre', '', d)}"
PNBLACKLIST[nextage-ros-bridge] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'openni2', 'openni2: depends on hironx-ros-bridge which depends on openni2-launch->openni2-camera->unavailable ROS_UNRESOLVED_DEP-libopenni2-dev', '', d)}"
PNBLACKLIST[nlopt] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'nlopt', 'nlopt: do_compile task fails: nlopt/2.1.13-1-r0/git/Makefile:10: /opt/ros/melodic/share/mk/download_unpack_build.mk: No such file or directory', '', d)}"
PNBLACKLIST[nmea-gps-plugin] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[node-manager-fkie] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires python-qt-binding which requires meta-qt5 to be included', 'depends on master-sync-fkie which dependsepends on master-discovery-fkie->unavailable ROS_UNRESOLVED_DEP-python-avahi', d)}"
PNBLACKLIST[novatel-oem7-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'novatel-oem7-driver', 'novatel-oem7-driver: do_configure task fails: ', '', d)}"
PNBLACKLIST[obj-to-pointcloud] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'obj-to-pointcloud', 'obj-to-pointcloud: do_compile task fails: obj-to-pointcloud/0.8.1-1-r0/git/src/obj_to_pointcloud.cpp:44:10: fatal error: pcl/io/vtk_lib_io.h: No such file or directory', '', d)}"
PNBLACKLIST[octomap-rviz-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[octovis] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt4', 'It has dependencies on Qt4 packages; it is not used by any other ROS 1 package.', '', d)}"
PNBLACKLIST[odom-frame-publisher] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted rosdoc-lite', '', d)}"
PNBLACKLIST[odva-ethernetip] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'odva-ethernetip', 'odva-ethernetip: do_compile task fails: odva-ethernetip/0.1.4-r0/git/include/odva_ethernetip/session.h:30:10: fatal error: gtest/gtest_prod.h: No such file or directory', '', d)}"
PNBLACKLIST[omnibase-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'omnibase-description', 'omnibase-description: do_install task fails: ', '', d)}"
PNBLACKLIST[omnibase-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'omnibase-gazebo', 'omnibase-gazebo: do_install task fails: ', '', d)}"
PNBLACKLIST[omron-os32c-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'odva-ethernetip', 'odva-ethernetip: depends on odva-ethernetip which fails to compile', '', d)}"
PNBLACKLIST[open-manipulator-control-gui] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'qt5: depends on qtbase; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[open-manipulator-controller] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-planning(-interface)->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[open-manipulator-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[open-manipulator-moveit] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires moveit-ros-visualization->moveit-setup-assistant->qtbase which requires meta-qt5 to be included; ogre: depends on moveit-setup-assistant which requires ogre which is not available', '', d)}"
PNBLACKLIST[open-manipulator-p-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'gazebo: Depends on gazebo-ros, gazebo which is not available', '', d)}"
PNBLACKLIST[open-manipulator-p-simulations] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, open-manipulator-p-gazebo which is not available', '', d)}"
PNBLACKLIST[open-manipulator-simulations] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, open-manipulator-gazebo which is not available', '', d)}"
PNBLACKLIST[open-manipulator-with-tb3-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[open-manipulator-with-tb3-simulations] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, open-manipulator-with-tb3-gazebo which is not available', '', d)}"
PNBLACKLIST[open-manipulator-with-tb3-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[open-manipulator-with-tb3-waffle-moveit] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires moveit-ros-visualization->moveit-setup-assistant->qtbase which requires meta-qt5 to be included; ogre: depends on moveit-setup-assistant which requires ogre which is not available', '', d)}"
PNBLACKLIST[open-manipulator-with-tb3-waffle-pi-moveit] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires moveit-ros-visualization->moveit-setup-assistant->qtbase which requires meta-qt5 to be included; ogre: depends on moveit-setup-assistant which requires ogre which is not available', '', d)}"
PNBLACKLIST[open-manipulator-with-tb3] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires open-manipulator-with-tb3-waffle-moveit->moveit-ros-visualization->moveit-setup-assistant->qtbase which requires meta-qt5 to be included; ogre: depends on open-manipulator-with-tb3-waffle-moveit->moveit-setup-assistant which requires ogre which is not available', '', d)}"
PNBLACKLIST[open-manipulator] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires open-manipulator-control-gui, open-manipulator-moveit->qtbase, open-manipulator-moveit->moveit-ros-visualization->moveit-setup-assistant->qtbase which requires meta-qt5 to be included; ogre: depends on moveit-setup-assistant which requires ogre which is not available', '', d)}"
PNBLACKLIST[opencv-apps] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'x11', 'x11: Depends on image-view which depends on gtk+->x11', '', d)}"
PNBLACKLIST[openhrp3] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-omniorb', 'python-omniorb: Depends on unavailable ROS_UNRESOLVED_DEP-python-omniorb', 'Depends on unavailable ROS_UNRESOLVED_DEP-atlas, ROS_UNRESOLVED_DEP-jython ROS_UNRESOLVED_DEP-f2c and blacklisted openrtm-aist', d)}"
PNBLACKLIST[openni-camera] ?= "{@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'openni', 'Depends on unavailable ROS_UNRESOLVED_DEP-libopenni-dev', '', d)}"
PNBLACKLIST[openni-launch] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'openni', 'openni: depends on openni-camera->unavailable ROS_UNRESOLVED_DEP-libopenni-dev', '', d)}"
PNBLACKLIST[openni2-camera] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'openni2', 'Depends on unavailable ROS_UNRESOLVED_DEP-libopenni2-dev', '', d)}"
PNBLACKLIST[openni2-launch] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'openni2', 'openni2: depends on openni2-camera->unavailable ROS_UNRESOLVED_DEP-libopenni2-dev', '', d)}"
PNBLACKLIST[openrtm-aist-python] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-omniorb', 'python-omniorb: Depends on unavailable ROS_UNRESOLVED_DEP-python-omniorb', '', d)}"
PNBLACKLIST[openrtm-aist] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-omniorb', 'python-omniorb: Depends on unavailable ROS_UNRESOLVED_DEP-omniorb', '', d)}"
PNBLACKLIST[openrtm-ros-bridge] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-omniorb', 'python-omniorb: Depends on rtmbuild and openrtm-tools which depends openrtm-aist-python, rtshell and openrtm-aist which depend on unavailable ROS_UNRESOLVED_DEP-python-omniorb', '', d)}"
PNBLACKLIST[openrtm-tools] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-omniorb', 'python-omniorb: Depends openrtm-aist-python, rtshell and openrtm-aist which depend on unavailable ROS_UNRESOLVED_DEP-python-omniorb', '', d)}"
PNBLACKLIST[optpp-catkin] ?= "Depends on unavailable ROS_UNRESOLVED_DEP-gfortran"
PNBLACKLIST[opw-kinematics] ?= "Depends on unavailable ROS_UNRESOLVED_DEP-cmake-common-scripts"
PNBLACKLIST[osg-interactive-markers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'osg', 'depends on unavailable ROS_UNRESOLVED_DEP-libopenscenegraph', '', d)}"
PNBLACKLIST[osg-markers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'osg', 'depends on unavailable ROS_UNRESOLVED_DEP-libopenscenegraph', '', d)}"
PNBLACKLIST[osg-utils] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'osg', 'depends on unavailable ROS_UNRESOLVED_DEP-libopenscenegraph', '', d)}"
PNBLACKLIST[p2os-launch] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'p2os-urdf', 'p2os-urdf: depends on p2os-urdf which fails to compile', '', d)}"
PNBLACKLIST[p2os-urdf] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'p2os-urdf', 'p2os-urdf: do_compile task fails: p2os-urdf/2.1.1-3-r0/git/src/publisher3at.cc:35:10: fatal error: string: No such file or directory #include <string>', '', d)}"
PNBLACKLIST[packagegroup-ros-turtlebot3-extended] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'turtlebot3', 'turtlebot3: rdepends on cartographer-ros, depthimage-to-laserscan, turtlebot3-applications, turtlebot3-applications-msgs, turtlebot3-autorace which were not ported to noeticy yet', '', d)}"
PNBLACKLIST[packagegroup-ros1-industrial-core] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on industrial-trajectory-filters->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and industrial-trajectory-filters->moveit-ros-planning->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[panda-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: depends on moveit-ros-visualization->ogre which is not available', '', d)}"
PNBLACKLIST[parrot-arsdk] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['ffmpeg', 'x264', 'parrot-arsdk'], 'ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license; parrot-arsdk: Depends on ROS_UNRESOLVED_DEP-automake, ROS_UNRESOLVED_DEP-yasm, ROS_UNRESOLVED_DEP-libavahi-core-dev, ROS_UNRESOLVED_DEP-nasm, ROS_UNRESOLVED_DEP-libavahi-client-dev', '', d)}"
PNBLACKLIST[pddl-planner-viewer] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['ff', 'ffha', 'downward'], 'ff: depends on pddl-planner which depends on ff which fails to compile; ffha: depends on pddl-planner which depends on ffha which fails to compile; downward: depends on pddl-planner which depends on downward which fails to compile', '', d)}"
PNBLACKLIST[pddl-planner] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['ff', 'ffha', 'downward'], 'ff: depends on ff which fails to compile; ffha: depends on ffha which fails to compile; downward: depends on downward which fails to compile', '', d)}"
PNBLACKLIST[people-tracking-filter] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'orocos-bfl', 'Depends on unavailabe ROS_UNRESOLVED_DEP-liborocos-bfl-dev', '', d)}"
PNBLACKLIST[people-velocity-tracker] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on wu-ros-tools which depends on easy-markers which depend on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: depends on wu-ros-tools which depends on easy-markers whcih depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[people] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on people-velocity-tracker which depends on wu-ros-tools which depends on easy-markers which depend on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: depends on people-velocity-tracker which depends on wu-ros-tools which depends on easy-markers whcih depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[pepper-meshes] ?= "Depends on unavailable ROS_UNRESOLVED_DEP-java"
PNBLACKLIST[perception] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'x11', 'Depends on image-pipeline->image-view->gtk+->x11', '', d)}"
PNBLACKLIST[pgm-learner] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-scipy', 'Depends on unavailable ROS_UNRESOLVED_DEP-python-scipy and ROS_UNRESOLVED_DEP-python-libpgm-pip', 'Depends on unavailable ROS_UNRESOLVED_DEP-python-libpgm-pip', d)}"
PNBLACKLIST[phidgets-accelerometer] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidget21', 'libphidget21: depends on phidgets-api which depends on libphidget21 which fails to compile', '', d)}"
PNBLACKLIST[phidgets-analog-inputs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidget21', 'libphidget21: depends on phidgets-api which depends on libphidget21 which fails to compile', '', d)}"
PNBLACKLIST[phidgets-analog-outputs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidget21', 'libphidget21: depends on phidgets-api which depends on libphidget21 which fails to compile', '', d)}"
PNBLACKLIST[phidgets-api] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidget21', 'libphidget21: depends on libphidget21 which fails to compile', '', d)}"
PNBLACKLIST[phidgets-digital-inputs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidget21', 'libphidget21: depends on phidgets-api which depends on libphidget21 which fails to compile', '', d)}"
PNBLACKLIST[phidgets-digital-outputs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidget21', 'libphidget21: depends on phidgets-api which depends on libphidget21 which fails to compile', '', d)}"
PNBLACKLIST[phidgets-drivers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidget21', 'libphidget21: depends on libphidget21 which fails to compile', '', d)}"
PNBLACKLIST[phidgets-gyroscope] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidget21', 'libphidget21: depends on phidgets-api which depends on libphidget21 which fails to compile', '', d)}"
PNBLACKLIST[phidgets-high-speed-encoder] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidget21', 'libphidget21: depends on libphidget21 which fails to compile', '', d)}"
PNBLACKLIST[phidgets-ik] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidget21', 'libphidget21: depends on libphidget21 which fails to compile', '', d)}"
PNBLACKLIST[phidgets-imu] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidget21', 'libphidget21: depends on libphidget21 which fails to compile', '', d)}"
PNBLACKLIST[phidgets-magnetometer] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidget21', 'libphidget21: depends on phidgets-api which depends on libphidget21 which fails to compile', '', d)}"
PNBLACKLIST[phidgets-motors] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidget21', 'libphidget21: depends on phidgets-api which depends on libphidget21 which fails to compile', '', d)}"
PNBLACKLIST[phidgets-spatial] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidget21', 'libphidget21: depends on phidgets-api which depends on libphidget21 which fails to compile', '', d)}"
PNBLACKLIST[phidgets-temperature] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libphidget21', 'libphidget21: depends on phidgets-api which depends on libphidget21 which fails to compile', '', d)}"
PNBLACKLIST[pilz-control] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'clang-tidy', 'Depends on pilz-utils which depends on unavailable clang-tidy', '', d)}"
PNBLACKLIST[pilz-industrial-motion-planner] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'opengl: Depends on moveit-ros-planning-interface, moveit-ros-move-group which depen on moveit-ros-planning which depend on moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; x11: Depends on moveit-ros-planning-interface, moveit-ros-move-group which depen on moveit-ros-planning which depend on moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[pilz-industrial-motion-planner-testutils] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'opengl: Depends on moveit-commander->moveit-ros-planning-interface->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; x11: depends on moveit-commander which depends on moveit-ros-planning-interface which depends on  moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[pilz-industrial-motion-testutils] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'opengl: Depends on moveit-commander->moveit-ros-planning-interface->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; x11: depends on moveit-commander which depends on moveit-ros-planning-interface which depends on  moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[pilz-industrial-motion] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'opengl: Depends on pilz-trajectory-generation->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; x11: depends on pilz-trajectory-generation which depends on moveit-ros-planning(-interface)->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[pilz-robot-programming] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'opengl: Depends on pilz-trajectory-generation->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; x11: depends on pilz-trajectory-generation which depends on moveit-ros-planning(-interface)->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[pilz-robots] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre', 'clang-tidy', 'muparser'], 'qt5: Requires prbt-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: Requires prbt-moveit-config->moveit-ros-visualization which requires ogre which is not available; clang-tidy: depends on prbt-hardware-support->pilz-utils->unavailable clang-tidy; muparser: depends on prbt-support->canopen-motor-node->unavailable ROS_UNRESOLVED_DEP-muparser', '', d)}"
PNBLACKLIST[pilz-status-indicator-rqt] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'clang-tidy'], 'qt5: Requires rqt-gui->qt-gui->qtbase which requires meta-qt5 to be included; pyqt5: rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5; clang-tidy: rdepends on prbt-hardware-support which depends on pilz-utils->unavailable clang-tidy', '', d)}"
PNBLACKLIST[pilz-testutils] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'clang-tidy', 'Depends on pilz-utils which depends on unavailable clang-tidy', '', d)}"
PNBLACKLIST[pilz-trajectory-generation] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-planning(-interface)->moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[pilz-utils] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'clang-tidy', 'Depends on unavailable clang-tidy', '', d)}"
PNBLACKLIST[pincher-arm-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'qt5', 'ogre'], 'opengl: Depends on moveit-fake-controller-manager, moveit-planners-ompl, moveit-ros-move-group, moveit-ros-planning-interface which depend on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; x11: Depends on moveit-fake-controller-manager, moveit-planners-ompl, moveit-ros-move-group, moveit-ros-planning-interface which on moveit-ros-perception->freeglut which requires x11; qt5: depends on moveit-ros-visualization, moveit-setup-assistant which depends on qtbase which requires meta-qt5 to be included; ogre: depends on moveit-ros-visualization, moveit-setup-assistant which depend on ogre which is not available', '', d)}"
PNBLACKLIST[pincher-arm-moveit-demos] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'qt5', 'ogre'], 'opengl: Depends on pincher-arm-moveit-config which depends on moveit-fake-controller-manager, moveit-planners-ompl, moveit-ros-move-group, moveit-ros-planning-interface which depend on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; x11: Depends on pincher-arm-moveit-config which depends on moveit-fake-controller-manager, moveit-planners-ompl, moveit-ros-move-group, moveit-ros-planning-interface which on moveit-ros-perception->freeglut which requires x11; qt5: depends on pincher-arm-moveit-config which depends on moveit-ros-visualization, moveit-setup-assistant which depends on qtbase which requires meta-qt5 to be included; ogre: depends on pincher-arm-moveit-config which depends on moveit-ros-visualization, moveit-setup-assistant which depend on ogre which is not available', '', d)}"
PNBLACKLIST[pincher-arm] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'qt5', 'ogre'], 'opengl: Depends on pincher-arm-moveit-demos, pincher-arm-moveit-config which depends on moveit-fake-controller-manager, moveit-planners-ompl, moveit-ros-move-group, moveit-ros-planning-interface which depend on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; x11: Depends on pincher-arm-moveit-demos, pincher-arm-moveit-config which depends on moveit-fake-controller-manager, moveit-planners-ompl, moveit-ros-move-group, moveit-ros-planning-interface which on moveit-ros-perception->freeglut which requires x11; qt5: depends on pincher-arm-moveit-demos, pincher-arm-moveit-config which depends on moveit-ros-visualization, moveit-setup-assistant which depends on qtbase which requires meta-qt5 to be included; ogre: depends on pincher-arm-moveit-demos, pincher-arm-moveit-config which depends on moveit-ros-visualization, moveit-setup-assistant which depend on ogre which is not available', '', d)}"
PNBLACKLIST[play-motion] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'opengl: Depends on moveit-ros-planning-interface which depends on moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; x11: depends on moveit-ros-planning-interface which depends on moveit-ros-perception->freeglut which requires x11', '', d)}"
PNBLACKLIST[plotjuggler-ros] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'qt5: depends on qtsvg from meta-ros and on plotjuggler which requires qtbase which requires meta-qt5 to be included; qt5-widgets: depends on plotjuggler which needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[plotjuggler] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[pointgrey-camera-driver] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pointgrey-camera-driver', 'pointgrey-camera-driver: do_compile task fails: ', '', d)}"
PNBLACKLIST[points-preprocessor] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[pose-cov-ops] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ffmpeg', 'x264', 'x11'], 'qt5: Requires mrpt-bridge->qtbase which requires meta-qt5 to be included; ffmpeg: Depends on (mrpt-bridge,mrpt1)->ffmpeg which requires commercial license; x264: Depends on (mrpt-bridge,mrpt1)->ffmpeg->x264 which requires commercial license; x11: Depends on (mrpt-bridge,mrpt1)->freeglut which requires x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[pr2-apps] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'pr2-description: depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-bringup-tests] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['x11', 'pr2-description', 'gst-ugly', 'python-mechanize'], 'x11: Depends on image-view which depends on gtk+->x11; pr2-description: depends on pr2-mannequin-mode, pr2-controller-manager, pr2-bringup which depends on robot-mechanism-controllers, pr2-controller-manager and pr2-gripper-action which depend on pr2-description which fails to compile; gst-ugly: Depends on pr2-bringup which depends on sound-play which depends on gstreamer1.0-plugins-ugly which requires commercial license; python-mechanize: depends on pr2-bringup which depends on wifi-ddwrt which depends on unavailable ROS_UNRESOLVED_DEP-python-mechanize', '', d)}"
PNBLACKLIST[pr2-bringup] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['pr2-description', 'gst-ugly', 'python-mechanize'], 'pr2-description: depends on robot-mechanism-controllers, pr2-controller-manager and pr2-gripper-action which depend on pr2-description which fails to compile; gst-ugly: Depends on sound-play which depends on gstreamer1.0-plugins-ugly which requires commercial license; python-mechanize: depends on wifi-ddwrt which depends on unavailable ROS_UNRESOLVED_DEP-python-mechanize', '', d)}"
PNBLACKLIST[pr2-calibration-controllers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'pr2-description: depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-calibration-launch] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['python-scipy', 'x11', 'pr2-description'], 'python-scipy: Depends on calibration-estimation->unavailable ROS_UNRESOLVED_DEP-python-scipy; x11: Depends on image-view which depends on gtk+->x11; pr2-description: depends on robot-mechanism-controllers which depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-calibration] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['python-scipy', 'x11', 'pr2-description'], 'python-scipy: Depends on pr2-calibration-launch which depends on calibration-estimation->unavailable ROS_UNRESOLVED_DEP-python-scipy; x11: Depends on pr2-calibration-launch which depends on image-view which depends on gtk+->x11; pr2-description: depends on pr2-calibration-launch which depends on robot-mechanism-controllers which depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-common] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'pr2-description: depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-controller-configuration-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[pr2-controller-configuration] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'pr2-description: depends on pr2-description itself and robot-mechanism-controllers, pr2-calibration-controllers and pr2-controller-manager which depend on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-controller-manager] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'pr2-description: depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-controllers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'pr2-description: depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-counterbalance-check] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'pr2-description: depends on pr2-controller-manager and pr2-controller-configuration which depend on pr2-description itself and robot-mechanism-controllers, pr2-calibration-controllers and pr2-controller-manager which depend on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'pr2-description: do_compile task fails: IVCON_CMD-NOTFOUND: not found', '', d)}"
PNBLACKLIST[pr2-ethercat] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'pr2-description: depends on pr2-controller-manager which depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[pr2-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[pr2-gripper-action] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'pr2-description: depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-gripper-sensor-action] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'pr2-description: depends on robot-mechanism-controllers and pr2-mechanism-controllers which depend on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-gripper-sensor-controller] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'pr2-description: depends on pr2-controller-manager which depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-gripper-sensor] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'pr2-description: depends on pr2-gripper-sensor-controller,pr2-gripper-sensor-action which depend on robot-mechanism-controllers and pr2-mechanism-controllers which depend on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-mannequin-mode] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'pr2-description: depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-mechanism-controllers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'pr2-description: depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-mechanism] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'pr2-description: depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-motor-diagnostic-tool] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'qt5: Requires rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included; pyqt5: rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[pr2-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'pr2-description'], 'Depends on moveit-ros-move-group->moveit-ros-planning->moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-move-group->moveit-ros-perception->freeglut which requires x11; pr2-description: depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-robot] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'Rdepends on imu-monitor which depends on pr2-mechanism-controllers which depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-se-calibration-launch] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['python-scipy', 'x11', 'pr2-description'], 'python-scipy: Depends on pr2-calibration-launch which depends on calibration-estimation->unavailable ROS_UNRESOLVED_DEP-python-scipy; x11: Depends on pr2-calibration-launch which depends on image-view which depends on gtk+->x11; pr2-description: depends on pr2-calibration-launch which depends on robot-mechanism-controllers which depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2-self-test] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['x11', 'pr2-description', 'gst-ugly', 'python-mechanize'], 'x11: Depends on pr2-bringup-tests which depends on image-view which depends on gtk+->x11; pr2-description: depends on pr2-bringup-tests, pr2-counterbalance-check, joint-qualification-controllers which depend on pr2-mannequin-mode, pr2-controller-manager, pr2-bringup which depends on robot-mechanism-controllers, pr2-controller-manager and pr2-gripper-action which depend on pr2-description which fails to compile; gst-ugly: Depends on pr2-bringup-tests which depends on pr2-bringup which depends on sound-play which depends on gstreamer1.0-plugins-ugly which requires commercial license; python-mechanize: depends on pr2-bringup-tests which depends on pr2-bringup which depends on wifi-ddwrt which depends on unavailable ROS_UNRESOLVED_DEP-python-mechanize', '', d)}"
PNBLACKLIST[pr2-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, pr2-gazebo, pr2-gazebo-plugins, pr2-controller-configuration-gazebo which is not available', '', d)}"
PNBLACKLIST[pr2-teleop-general] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'pr2-description: depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[pr2eus-moveit] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['gst-ugly', 'lisp', 'pr2-description', 'assimp-devel'], 'gst-ugly: Depends on pr2eus->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; lisp: depends on blacklisted roseus which depends on geneus, euslisp; pr2-description: depends on pr2eus which depends on pr2-description which fails to compile; assimp-devel; depends on pr2eus which depends on euscollada which depends on assimp-devel which fails to compile', '', d)}"
PNBLACKLIST[pr2eus-tutorials] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gst-ugly', 'python-scipy'], 'qt5: Requires jsk-pcl-ros->jsk-recognition-utils->qtbase which requires meta-qt5 to be included; gst-ugly: Depends on jsk-pcl-ros, pr2eus, jsk-interactive-marker which depend on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-scipy: Depends on jsk-pcl-ros, pr2eus, jsk-interactive-marker which depend on jsk-topic-tools which depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[pr2eus] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['gst-ugly', 'lisp', 'pr2-description', 'assimp-devel'], 'gst-ugly: Depends on sound-play->gstreamer1.0-plugins-ugly which requires commercial license; lisp: depends on blacklisted roseus which depends on geneus, euslisp; pr2-description: depends on pr2-description which fails to compile; assimp-devel; depends on euscollada which depends on assimp-devel which fails to compile', '', d)}"
PNBLACKLIST[prbt-gazebo] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre', 'gazebo'], 'qt5: Requires prbt-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: Requires prbt-moveit-config->moveit-ros-visualization which requires ogre which is not available; gazebo: rdepends on gazebo-ros, gazebo-ros-control which requires gazebo', '', d)}"
PNBLACKLIST[prbt-grippers] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre', 'muparser'], 'qt5: Requires prbt-pg70-support->prbt-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: Requires prbt-pg70-support->prbt-moveit-config->moveit-ros-visualization which requires ogre which is not available; muparser: rdepends on prbt-pg70-support->prbt-support->canopen-motor-node->unavailable ROS_UNRESOLVED_DEP-muparser', '', d)}"
PNBLACKLIST[prbt-hardware-support] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'clang-tidy', 'Depends on pilz-utils->unavailable clang-tidy', '', d)}"
PNBLACKLIST[prbt-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre', 'clang-tidy', 'muparser'], 'qt5: Requires moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: Requires moveit-ros-visualization which requires ogre which is not available; clang-tidy: depends on prbt-hardware-support->pilz-utils->unavailable clang-tidy; muparser: depends on prbt-support->canopen-motor-node->unavailable ROS_UNRESOLVED_DEP-muparser', '', d)}"
PNBLACKLIST[prbt-pg70-support] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre', 'muparser'], 'qt5: Requires prbt-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: Requires prbt-moveit-config->moveit-ros-visualization which requires ogre which is not available; muparser: depends on prbt-support->canopen-motor-node->unavailable ROS_UNRESOLVED_DEP-muparser', '', d)}"
PNBLACKLIST[prbt-support] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'muparser', 'Depends on canopen-motor-node->unavailable ROS_UNRESOLVED_DEP-muparser', '', d)}"
PNBLACKLIST[psen-scan-v2] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[psen-scan] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[py-trees-ros] ?= "Rdepends on unavailable ROS_UNRESOLVED_DEP-python-termcolor"
PNBLACKLIST[pyros-utils] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pyros-utils', 'pyros-utils: do_configure tasks fails: pip from catkin-pip is not usable even with pythonnative', '', d)}"
PNBLACKLIST[python-qt-binding] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires meta-qt5 to be included and pyqt5 enabled', '', d)}"
PNBLACKLIST[qt-dotgraph] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires python-qt-binding which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[qt-gui-app] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires qt-gui->qtbase which requires meta-qt5 to be included and qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[qt-gui-core] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'qt-gui-cpp'], 'Requires qt-gui-py-common which requires meta-qt5 to be included and qt-gui(-cpp)->python-qt-binding which requires pyqt5; qt-gui-cpp: depends on qt-gui-cpp which requires pyqt5-native for sip', '', d)}"
PNBLACKLIST[qt-gui-cpp] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'qt-gui-cpp'], 'Requires qtbase which requires meta-qt5 to be included and python-qt-binding which requires pyqt5; qt-gui-cpp: requires pyqt5-native for sip', '', d)}"
PNBLACKLIST[qt-gui-py-common] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires python-qt-binding which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[qt-gui] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires qtbase which requires meta-qt5 to be included and python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[qt-qmake-native] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[qt-qmake] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires qtbase which requires meta-qt5 to be included', '', d)}"
PNBLACKLIST[qt-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt4', 'Requires qt-tutorials which requires libqt4-dev which requires meta-qt4 to be included', '', d)}"
PNBLACKLIST[qt-tutorials] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt4', 'Requires libqt4-dev which requires meta-qt4 to be included', '', d)}"
PNBLACKLIST[radial-menu-example] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on rviz which equires python-qt-binding which requires meta-qt5 to be included; ogre: depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[radial-menu-rviz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on rviz which equires python-qt-binding which requires meta-qt5 to be included; ogre: depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[radial-menu] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on radial-menu-rviz which depends on rviz which equires python-qt-binding which requires meta-qt5 to be included; ogre: depends on radial-menu-rviz which depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[rail-mesh-icp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'rail-mesh-icp', 'rail-mesh-icp: do_compile task fails: rail-mesh-icp/0.0.4-1-r0/git/tools/mesh_sampler_node.cpp:2:10: fatal error: pcl/visualization/pcl_visualizer.h: No such file or directory', '', d)}"
PNBLACKLIST[raw-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[rc-cloud-accumulator] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt'], 'Requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[rc-roi-manager-gui] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on wxwidgets->freeglut which is not available because of missing opengl in DISTRO_FEATURES and wxwidgets->x11', '', d)}"
PNBLACKLIST[rc-visard] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on rc-roi-manager-gui->wxwidgets->freeglut which is not available because of missing opengl in DISTRO_FEATURES and rc-roi-manager-gui->wxwidgets->x11', '', d)}"
PNBLACKLIST[realsense2-camera] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'glfw'], 'opengl: depends on librealsense2->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; glfw: Depends on librealsense2->glfw which is not available in zeus and older', '', d)}"
PNBLACKLIST[resized-image-transport] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['gst-ugly', 'python-scipy'], 'gst-ugly: Depends on jsk-topic-tools->sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-scipy: Depends on jsk-topic-tools which depends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[respeaker-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-speechrecognition-pip', 'python-speechrecognition-pip: Depends on unavailable ROS_UNRESOLVED_DEP-python-pyusb-pip, ROS_UNRESOLVED_DEP-python-speechrecognition-pip', 'Depends on unavailable ROS_UNRESOLVED_DEP-python-pyusb-pip', d)}"
PNBLACKLIST[rexrov2-control] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[rexrov2-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[rexrov2-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, rexrov2-control, rexrov2-description which is not available', '', d)}"
PNBLACKLIST[ridgeback-desktop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires ridgeback-viz->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[ridgeback-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[ridgeback-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[ridgeback-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, ridgeback-gazebo which is not available', '', d)}"
PNBLACKLIST[ridgeback-viz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[rm-control] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'gazebo: Depends on rm-gazebo which depends on gazebo-ros which is not available', '', d)}"
PNBLACKLIST[rm-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'gazebo: Depends on gazebo-ros which is not available', '', d)}"
PNBLACKLIST[robosense-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo-ros which depends on gazebo which is not available', '', d)}"
PNBLACKLIST[robosense-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Rdepends on robosense-gazebo-plugins which depends on gazebo-ros which depends on gazebo which is not available', '', d)}"
PNBLACKLIST[robot-body-filter] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'robot-body-filter'], 'Depends on moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and moveit-ros-perception->freeglut which requires x11; robot-body-filter: do_compile task fails: robot-body-filter/1.1.6-1-r0/git/src/utils/obb.cpp:3:10: fatal error: fcl/BV/OBB.h: No such file or directory', '', d)}"
PNBLACKLIST[robot-mechanism-controllers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'pr2-description', 'pr2-description: depends on pr2-description which fails to compile', '', d)}"
PNBLACKLIST[robot-nav-rviz-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[robot-nav-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on robot-nav-rviz-plugins which depends on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: depends on robot-nav-rviz-plugins which depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[robot-nav-viz-demos] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[robot-pose-ekf] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'orocos-bfl', 'Depends on unavailabe ROS_UNRESOLVED_DEP-liborocos-bfl-dev', '', d)}"
PNBLACKLIST[robot-upstart] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'net-tools', 'Depends on unavailabe ROS_UNRESOLVED_DEP-net-tools', '', d)}"
PNBLACKLIST[roboticsgroup-upatras-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo-ros, gazebo which is not available', '', d)}"
PNBLACKLIST[roomba-stage] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'stage-ros'], 'Depends on stage-ros->stage->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and stage-ros->stage->(fltk,gtk+)->x11; stage-ros: depends on stage-ros which fails to compile', '', d)}"
PNBLACKLIST[ros-canopen] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'muparser', 'Depends on canopen-motor-node->unavailable ROS_UNRESOLVED_DEP-muparser', '', d)}"
PNBLACKLIST[ros-controllers] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-joint-trajectory-controller->rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included and rqt-joint-trajectory-controller->rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[ros-emacs-utils] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[ros-ign-bridge] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ignition', 'ignition: depends on unavailable ROS_UNRESOLVED_DEP-ignition-msgs5, ROS_UNRESOLVED_DEP-ignition-transport8', '', d)}"
PNBLACKLIST[ros-ign-gazebo-demos] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ignition', 'ignition: depends on unavailable ROS_UNRESOLVED_DEP-ignition-gazebo3', '', d)}"
PNBLACKLIST[ros-ign-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ignition', 'ignition: depends on unavailable ROS_UNRESOLVED_DEP-ignition-gazebo3', '', d)}"
PNBLACKLIST[ros-ign-image] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ignition', 'ignition: depends on unavailable ROS_UNRESOLVED_DEP-ignition-msgs5, ROS_UNRESOLVED_DEP-ignition-transport8', '', d)}"
PNBLACKLIST[ros-ign] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ignition', 'ignition: rdepends on ros-ign-bridge, ros-ign-image, ros-ign-gazebo-demos which depend on unavailable ROS_UNRESOLVED_DEP-ignition-msgs5, ROS_UNRESOLVED_DEP-ignition-transport8, ROS_UNRESOLVED_DEP-ignition-gazebo3', '', d)}"
PNBLACKLIST[ros-image-turtlebot3-core] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'turtlebot3', 'turtlebot3: rdepends on packagegroup-ros-turtlebot3-extended which depends on cartographer-ros, depthimage-to-laserscan, turtlebot3-applications, turtlebot3-applications-msgs, turtlebot3-autorace which were not ported to noeticy yet', '', d)}"
PNBLACKLIST[ros-reflexxes] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ros-reflexxes', 'ros-reflexxes: do_compile task fails: does not respect sysroot prefix for libReflexxesTypeII.so: ninja: error: /opt/ros/melodic/lib/libReflexxesTypeII.so, needed by /jenkins/mjansa/build/ros/ros1-melodic-thud/tmp-glibc/work/core2-64-oe-linux/ros-reflexxes/0.8.8-1-r0/devel/lib/libros_reflexxes.so, missing and no known rule to make it', '', d)}"
PNBLACKLIST[ros-speech-recognition] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['gst-ugly', 'python-speechrecognition-pip'], 'gst-ugly: Depends on sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-speechrecognition-pip: Depends on unavailable ROS_UNRESOLVED_DEP-python-pyusb-pip', '', d)}"
PNBLACKLIST[ros-tutorials] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires turtlesim->qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[rosbag-editor] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'rosbag-editor'], 'Requires qtbase which requires meta-qt5 to be included; rosbag-editor: do_compile task fails: rosbag-editor/0.4.2-1-r0/git/src/rosbag_editor.h:4:10: fatal error: QMainWindow: No such file or directory', '', d)}"
PNBLACKLIST[rosbag-pandas] ?= "Rdepends on unavailable ROS_UNRESOLVED_DEP-python-pandas"
PNBLACKLIST[rosdoc-lite] ?= "Generation of ROS package documentation will never be done on the target."
PNBLACKLIST[rosemacs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[roseus-mongo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted roseus', '', d)}"
PNBLACKLIST[roseus-smach] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted euslisp, roseus', '', d)}"
PNBLACKLIST[roseus-tutorials] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on roseus->blacklisted geneus, euslisp', '', d)}"
PNBLACKLIST[roseus] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on blacklisted geneus, euslisp', '', d)}"
PNBLACKLIST[rosflight-pkgs] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Rdepends on rosflight-utils which depends on rosflight-sim which depends on gazebo-plugins,gazebo-ros which depends on gazebo which is not available', '', d)}"
PNBLACKLIST[rosflight-sim] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo-plugins,gazebo-ros which depends on gazebo which is not available', '', d)}"
PNBLACKLIST[rosflight-utils] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on rosflight-sim which depends on gazebo-plugins,gazebo-ros which depends on gazebo which is not available', '', d)}"
PNBLACKLIST[rosflight] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'rosflight', 'rosflight: do_compile task fails: ', '', d)}"
PNBLACKLIST[roslisp-common] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[roslisp-repl] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[roslisp-utilities] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[roslisp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[rosmon-core] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'rosmon-core', 'rosmon-core: do_compile task fails: probably caused by python37 being used by boost-python: rosmon-core/2.2.1-1-r0/recipe-sysroot-native/usr/bin/x86_64-oe-linux/../../libexec/x86_64-oe-linux/gcc/x86_64-oe-linux/8.2.0/ld: /jenkins/mjansa/build/ros/ros1-melodic-thud/tmp-glibc/work/core2-64-oe-linux/rosmon-core/2.2.1-1-r0/recipe-sysroot/usr/lib/../lib/libboost_python37.so: undefined reference to PyUnicode_InternFromString', '', d)}"
PNBLACKLIST[rosmon] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'qt-gui-cpp'], 'Requires rqt-rosmon->qtbase which requires meta-qt5 to be included and rqt-rosmon->rqt-gui-cpp->qt-gui->python-pyqt5 which requires pyqt5; qt-gui-cpp: depends on rqt-rosmon rdepends on rqt-gui-cpp which depends on qt-gui-cpp which requires pyqt5-native for sip', '', d)}"
PNBLACKLIST[rosnode-rtc] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-omniorb', 'python-omniorb: Depends on openrtm-tools which depends openrtm-aist-python, rtshell and openrtm-aist which depend on unavailable ROS_UNRESOLVED_DEP-python-omniorb', '', d)}"
PNBLACKLIST[rospilot] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['ffmpeg', 'x264', 'rospilot'], 'ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license; rospilot: Depends on ROS_UNRESOLVED_DEP-python-tilestache, ROS_UNRESOLVED_DEP-python-mapnik, ROS_UNRESOLVED_DEP-libnl-3, ROS_UNRESOLVED_DEP-postgresql-postgis, ROS_UNRESOLVED_DEP-python-cherrypy, ROS_UNRESOLVED_DEP-osm2pgsql, ROS_UNRESOLVED_DEP-dnsmasq, ROS_UNRESOLVED_DEP-mapnik-utils, ROS_UNRESOLVED_DEP-hostapd, ROS_UNRESOLVED_DEP-python-colorama, ROS_UNRESOLVED_DEP-gdal-bin, ROS_UNRESOLVED_DEP-libmicrohttpd, ROS_UNRESOLVED_DEP-libnl-3-dev', '', d)}"
PNBLACKLIST[rosserial-arduino] ?= "Depends on unavailable ROS_UNRESOLVED_DEP-arduino-core"
PNBLACKLIST[rostwitter] ?= "Depends on unavailable ROS_UNRESOLVED_DEP-python-requests-oauthlib"
PNBLACKLIST[rotors-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[rotors-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, rotors-gazebo-plugins which is not available', '', d)}"
PNBLACKLIST[rotors-simulator] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'qt5: Requires rqt-rotors->rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included; gazebo: depends on (rotors-gazebo,rotors-gazebo-plugins)->gazebo which is not available', '', d)}"
PNBLACKLIST[rqt-action] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-py-common which requires meta-qt5 to be included and (rqt-msg,rqt-py-common)->python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-bag-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'python-deps'], 'Requires rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included and depends on unavailable ROS_UNRESOLVED_DEP-python-cairo', '', d)}"
PNBLACKLIST[rqt-bag] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-common-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'python-deps'], 'Requires rqt-py-common which requires meta-qt5 to be included and depends on rqt-bag-plugins->unavailable ROS_UNRESOLVED_DEP-python-cairo', '', d)}"
PNBLACKLIST[rqt-console] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and (rqt-gui-py,rqt-py-common,rqt-logger-level)->python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-controller-manager] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-gui->qt-gui->qtbase which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-dep] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-drone-teleop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'gazebo'], 'qt5: requires rqt-gui->qt-gui->qtbase which requires meta-qt5 to be included; pyqt5: rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5; gazebo: requires drone-wrapper which depends on gazebo', '', d)}"
PNBLACKLIST[rqt-ez-publisher] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-py-common which requires meta-qt5 to be included and rqt-py-common->python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-graph] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-ground-robot-teleop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-gui->qt-gui->qtbase which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-gui-cpp] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'qt-gui-cpp'], 'Requires qtbase which requires meta-qt5 to be included and qt-gui->python-pyqt5 which requires pyqt5; qt-gui-cpp: depends on qt-gui-cpp which requires pyqt5-native for sip', '', d)}"
PNBLACKLIST[rqt-gui-py] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires qt-gui->qtbase which requires meta-qt5 to be included and qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-gui] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires qt-gui->qtbase which requires meta-qt5 to be included and qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-image-view] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'qt-gui-cpp'], 'Requires qtbase which requires meta-qt5 to be included and rqt-gui-cpp->qt-gui->python-pyqt5 which requires pyqt5; qt-gui-cpp: rdepends on rqt-gui-cpp which depends on qt-gui-cpp which requires pyqt5-native for sip', '', d)}"
PNBLACKLIST[rqt-joint-trajectory-controller] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-joint-trajectory-plot] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-gui->qt-gui->qtbase which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-launch] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-launchtree] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-logger-level] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-moveit] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-msg] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-multiplot] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'qt-gui-cpp'], 'Requires qtbase which requires meta-qt5 to be included and rqt-gui-cpp->qt-gui->python-pyqt5 which requires pyqt5; qt-gui-cpp: rdepends on rqt-gui-cpp which depends on qt-gui-cpp which requires pyqt5-native for sip', '', d)}"
PNBLACKLIST[rqt-nav-view] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-plot] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-pose-view] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'python-deps'], 'Requires python-qt-binding which requires meta-qt5 to be included and depends on unavailable ROS_UNRESOLVED_DEP-python-opengl', '', d)}"
PNBLACKLIST[rqt-pr2-dashboard] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'qt5: Requires rqt-gui->qt-gui->qtbase which requires meta-qt5 to be included; pyqt5: depends on rqt-robot-dashboard which depends on python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-publisher] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-py-common] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-py-console] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-py-trees] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'python-deps'], 'Requires qt-dotgraph which requires meta-qt5 to be included and depends on unavailable ROS_UNRESOLVED_DEP-python-termcolor, ROS_UNRESOLVED_DEP-python-pygraphviz', '', d)}"
PNBLACKLIST[rqt-reconfigure] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-robot-dashboard] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-robot-monitor] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-robot-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'python-deps'], 'Requires rqt-rviz->qtbase which requires meta-qt5 to be included and depends on rqt-pose-view->unavailable ROS_UNRESOLVED_DEP-python-opengl', '', d)}"
PNBLACKLIST[rqt-robot-steering] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-rosmon] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'qt-gui-cpp'], 'Requires qtbase which requires meta-qt5 to be included and rqt-gui-cpp->qt-gui->python-pyqt5 which requires pyqt5; qt-gui-cpp: rdepends on rqt-gui-cpp which depends on qt-gui-cpp which requires pyqt5-native for sip', '', d)}"
PNBLACKLIST[rqt-rotors] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-runtime-monitor] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-rviz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre', 'qt-gui-cpp'], 'Requires qtbase which requires meta-qt5 to be included and rqt-gui-cpp->qt-gui->python-pyqt5 which requires pyqt5; ogre: depends on rviz which depends on ogre which is not available; qt-gui-cpp: rdepends on rqt-gui-cpp which depends on qt-gui-cpp which requires pyqt5-native for sip', '', d)}"
PNBLACKLIST[rqt-service-caller] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-py-common which requires meta-qt5 to be included and rqt-py-common->python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-shell] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-srv] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included and rqt-msg->python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-tf-tree] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-top] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-topic] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and rqt-gui(-py)->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-virtual-joy] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included and rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[rqt-web] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt-binding which requires meta-qt5 to be included and python-qt-binding which requires pyqt5', '', d)}"
PNBLACKLIST[rqt] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'qt-gui-cpp'], 'Requires rqt-gui-cpp->qtbase which requires meta-qt5 to be included and (rqt-gui-py,rqt-gui-cpp)->qt-gui->python-pyqt5 which requires pyqt5; qt-gui-cpp: rdepends on rqt-gui-cpp which depends on qt-gui-cpp which requires pyqt5-native for sip', '', d)}"
PNBLACKLIST[rr-openrover-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo-ros, gazebo-plugins which depends on gazebo which is not available', '', d)}"
PNBLACKLIST[rr-openrover-simulation] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo-ros, gazebo-plugins which depends on gazebo which is not available', '', d)}"
PNBLACKLIST[rr-openrover-stack] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on rr-openrover-description, rr-openrover-simulation which depends on gazebo-ros, gazebo-plugins which depends on gazebo which is not available', '', d)}"
PNBLACKLIST[rtabmap-ros] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt'], 'Requires rviz which requires meta-qt5 to be included and depends on rtabmap which requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[rtabmap] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt'], 'Requires qt-gui-cpp->qtbase which requires meta-qt5 to be included and requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[rtctree] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-omniorb', 'python-omniorb: Depends on unavailable ROS_UNRESOLVED_DEP-python-omniorb', '', d)}"
PNBLACKLIST[rtmbuild] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-omniorb', 'python-omniorb: Depends on unavailable ROS_UNRESOLVED_DEP-python-omniorb itself and openrtm-aist-python and openrtm-aist which depend on unavailable ROS_UNRESOLVED_DEP-python-omniorb', '', d)}"
PNBLACKLIST[rtmros-common] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['python-omniorb', 'qt5', 'pyqt5', 'assimp-devel', 'net-tools'], 'python-omniorb: Depends on rtmbuild and openrtm-tools which depends openrtm-aist-python, rtshell and openrtm-aist which depend on unavailable ROS_UNRESOLVED_DEP-python-omniorb and depends on hrpsys-ros-bridge which depends openhrp3 which depends on unavailable ROS_UNRESOLVED_DEP-python-omniorb; qt5: depends on hrpsys-ros-bridge which depends on rqt-gui,rqt-gui-py which depends on qt-gui->qtbase and rqt-robot-(monitor,dashboard) which depends on python-qt-binding which requires meta-qt5 to be included; pyqt5: depends on hrpsys-ros-bridge which depends on rqt-gui,rqt-gui-py which depends on qt-gui->python-pyqt5 and rqt-robot-(monitor,dashboard)->python-qt-binding which requires pyqt5; assimp-devel: depends on hrpsys-ros-bridge which depends on euscollada which depends on assimp-devel which fails to compile; net-tools: Depends on hrpsys-ros-bridge which depends on openhrp3 which depends on unavailable ROS_UNRESOLVED_DEP-net-tools', 'Depends on hrpsys-ros-bridge which depends on openhrp3 which depends on unavailable ROS_UNRESOLVED_DEP-atlas, ROS_UNRESOLVED_DEP-jython ROS_UNRESOLVED_DEP-f2c and blacklisted openrtm-aist and on ROS_UNRESOLVED_DEP-libirrlicht-dev, ROS_UNRESOLVED_DEP-net-tools, ROS_UNRESOLVED_DEP-procps, ROS_UNRESOLVED_DEP-ipython, ROS_UNRESOLVED_DEP-hostname', d)}"
PNBLACKLIST[rtmros-hironx] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'openni2', 'openni2: depends on hironx-ros-bridge which depends on openni2-launch->openni2-camera->unavailable ROS_UNRESOLVED_DEP-libopenni2-dev', '', d)}"
PNBLACKLIST[rtmros-nextage] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on nextage-gazebo which depend on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[rtshell] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-omniorb', 'python-omniorb: Depends on unavailable ROS_UNRESOLVED_DEP-python-omniorb', '', d)}"
PNBLACKLIST[rtsprofile] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-omniorb', 'python-omniorb: Depends on unavailable ROS_UNRESOLVED_DEP-python-omniorb', '', d)}"
PNBLACKLIST[rviz-animated-view-controller] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'opengl', 'ogre'], 'qt5: depends on qtbase which requires meta-qt5 to be included; opengl: depends on mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[rviz-imu-plugin] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[rviz-map-plugin] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: Requires qtbase which requires meta-qt5 to be included; pyqt5: Requires rviz which depends on pyqt5; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[rviz-mesh-plugin] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: Requires qtbase which requires meta-qt5 to be included; pyqt5: Requires rviz which depends on pyqt5; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[rviz-plugin-tutorials] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[rviz-python-tutorial] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[rviz-satellite] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[rviz-visual-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Requires rviz which requires meta-qt5 to be included; ogre: depends on ogre which is not available', '', d)}"
PNBLACKLIST[rviz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Requires python-qt-binding which requires meta-qt5 to be included; ogre: depends on ogre which is not available', '', d)}"
PNBLACKLIST[rx-service-tools] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'wxpython', 'Depends on wxpython which does not build: ld: cannot find -lwx_gtk3u_xrc-3.0', '', d)}"
PNBLACKLIST[safe-teleop-stage] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on stage->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and stage->(fltk,gtk+)->x11', '', d)}"
PNBLACKLIST[sainsmart-relay-usb] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'sainsmart-relay-usb', 'sainsmart-relay-usb: do_compile task fails: sainsmart-relay-usb/0.0.2-r0/git/src/list.cpp:35:10: fatal error: ftdi.h: No such file or directory', '', d)}"
PNBLACKLIST[sand-island] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[sbpl-lattice-planner] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'sbpl-lattice-planner', 'sbpl-lattice-planner: do_compile task fails: does not respect sysroot prefix for libsbpl.so: ninja: error: /usr/lib/libsbpl.so, needed by /jenkins/mjansa/build/ros/ros1-melodic-thud/tmp-glibc/work/core2-64-oe-linux/sbpl-lattice-planner/0.3.3-1-r0/devel/lib/libsbpl_lattice_planner.so, missing and no known rule to make it', '', d)}"
PNBLACKLIST[sbpl-recovery] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'sbpl-lattice-planner', 'sbpl-lattice-planner: depends on sbpl-lattice-planner which fails to compile', '', d)}"
PNBLACKLIST[schunk-libm5api] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'schunk-libm5api', 'schunk-libm5api: do_compile task fails: does not respect sysroot prefix for libpcan.so: ninja: error: /opt/ros/melodic/lib/libpcan.so, needed by /jenkins/mjansa/build/ros/ros1-melodic-thud/tmp-glibc/work/core2-64-oe-linux/schunk-libm5api/0.6.14-1-r0/devel/lib/libm5api.so, missing and no known rule to make it', '', d)}"
PNBLACKLIST[schunk-modular-robotics] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['schunk-libm5api', 'schunk-sdh'], 'schunk-libm5api: depends on schunk-libm5api which fails to compile; schunk-sdh: depends on schunk-sdh which fails to compile', '', d)}"
PNBLACKLIST[schunk-powercube-chain] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'schunk-libm5api', 'schunk-libm5api: depends on schunk-libm5api which fails to compile', '', d)}"
PNBLACKLIST[schunk-sdh] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'schunk-sdh', 'schunk-sdh: do_compile task fails: does not respect sysroot prefix for libpcan.so: ninja: error: /opt/ros/melodic/lib/libpcan.so, needed by /jenkins/mjansa/build/ros/ros1-melodic-thud/tmp-glibc/work/core2-64-oe-linux/schunk-sdh/0.6.14-1-r0/devel/lib/schunk_sdh/dsa_only, missing and no known rule to make it', '', d)}"
PNBLACKLIST[schunk-simulated-tactile-sensors] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'schunk-sdh', 'schunk-sdh: depends on schunk-sdh which fails to compile', '', d)}"
PNBLACKLIST[seed-r7-bringup] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires seed-r7-typef-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: depends on seed-r7-typef-moveit-config->moveit-setup-assistant which requires ogre which is not available', '', d)}"
PNBLACKLIST[seed-r7-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: depends on moveit-setup-assistant which requires ogre which is not available', '', d)}"
PNBLACKLIST[seed-r7-navigation] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'libg2o'], 'Depends on teb-local-planner->stage->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; libg2o: depends on libg2o which fails to compile', '', d)}"
PNBLACKLIST[seed-r7-ros-pkg] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires seed-r7-moveit-config->moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: Requires seed-r7-moveit-config->moveit-ros-visualization which requires ogre which is not available', 'depends on seed-r7-samples->smach-viewer->wxpython which does not build: ld: cannot find -lwx_gtk3u_xrc-3.0', d)}"
PNBLACKLIST[seed-r7-samples] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'qt5', 'Requires rviz-plugin-tutorials->qtbase which requires meta-qt5 to be included', 'depends on smach-viewer->wxpython which does not build: ld: cannot find -lwx_gtk3u_xrc-3.0', d)}"
PNBLACKLIST[seed-r7-typef-moveit-config] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'qt5: Requires moveit-ros-visualization->qtbase which requires meta-qt5 to be included; ogre: depends on moveit-setup-assistant which requires ogre which is not available', '', d)}"
PNBLACKLIST[sesame-ros] ?= "Depends on blacklisted catkin-virtualenv"
PNBLACKLIST[sick-safetyscanners] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires rqt-reconfigure->python-qt-binding which requires meta-qt5 to be included and rqt-reconfigure->rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[simple-grasping] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt'], 'Requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[simulators] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires rqt-robot-plugins->rqt-rviz->qtbase which requires meta-qt5 to be included and rdepends on gazebo-ros-pkgs which requires gazebo', '', d)}"
PNBLACKLIST[slam-toolbox-rviz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on qtbase and rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[slam-toolbox] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[slider-publisher] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'qt5: Requires rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included; pyqt5: rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[slime-ros] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[slime-wrapper] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'lisp', 'depends on sbcl for which there is no OE recipe', '', d)}"
PNBLACKLIST[smach-viewer] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'wxpython', 'Depends on wxpython which does not build: ld: cannot find -lwx_gtk3u_xrc-3.0', '', d)}"
PNBLACKLIST[soem] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'soem', 'soem: do_compile task fails: soem/1.4.0-1-r0/git/SOEM/oshw/linux/oshw.c:83:11: error: strncpy specified bound depends on the length of the source argument [-Werror=stringop-overflow=]', '', d)}"
PNBLACKLIST[sot-core] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'dynamic-graph-python', 'dynamic-graph-python: depends on dynamic-graph-python which fails in do_configure task', '', d)}"
PNBLACKLIST[sot-dynamic-pinocchio] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'dynamic-graph-python', 'dynamic-graph-python: depends on sot-core, sot-tools which depends on dynamic-graph-python which fails in do_configure task', '', d)}"
PNBLACKLIST[sot-tools] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'dynamic-graph-python', 'dynamic-graph-python: depends on dynamic-graph-python which fails in do_configure task', '', d)}"
PNBLACKLIST[sound-play] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['gst-ugly', 'python-gi'], 'gst-ugly: Depends on gstreamer1.0-plugins-ugly which requires commercial license; python-gi: Depends on unavailable python-gi', '', d)}"
PNBLACKLIST[spacenav-node] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'libspnav', 'Depends on unavailable ROS_UNRESOLVED_DEP-libspnav-dev', '', d)}"
PNBLACKLIST[spatio-temporal-voxel-layer] ?= "Depends on unavailable ROS_UNRESOLVED_DEP-libopenvdb, ROS_UNRESOLVED_DEP-libopenexr-dev, ROS_UNRESOLVED_DEP-libopenvdb-dev"
PNBLACKLIST[stage-ros] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'stage-ros'], 'Depends on stage->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and stage->(fltk,gtk+)->x11; stage-ros: do_compile task fails: stage-ros/1.8.0-r0/git/src/stageros.cpp:38:10: fatal error: stage.hh: No such file or directory', '', d)}"
PNBLACKLIST[stage] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and fltk, gtk+->x11', '', d)}"
PNBLACKLIST[swri-console] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'qt5: depends on qtbase; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[swri-profiler-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'qt5: depends on qtbase; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[task-compiler] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['lisp', 'wxpython'], 'lisp: Depends on roseus-smach which depends on blacklisted euslisp, roseus; wxpython: depends on smach-viewer which depends on wxpython which does not build: ld: cannot find -lwx_gtk3u_xrc-3.0', '', d)}"
PNBLACKLIST[teb-local-planner-tutorials] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'libg2o', 'stage-ros'], 'Depends on teb-local-planner->libg2o->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and stage-ros->stage->(fltk,gtk+)->x11; libg2o: depends on libg2o which fails to compile; stage-ros: depends on stage-ros which fails to compile', '', d)}"
PNBLACKLIST[teb-local-planner] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'libg2o'], 'Depends on libg2o->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; libg2o: depends on libg2o which fails to compile', '', d)}"
PNBLACKLIST[tesseract-collision] ?= "Depends on unavailable ROS_UNRESOLVED_DEP-bullet-extras"
PNBLACKLIST[tesseract-environment] ?= "Depends on tesseract-kinematics which depends on opw-kinematics which depends on unavailable ROS_UNRESOLVED_DEP-cmake-common-scripts"
PNBLACKLIST[tesseract-kinematics] ?= "Depends on opw-kinematics which depends on unavailable ROS_UNRESOLVED_DEP-cmake-common-scripts"
PNBLACKLIST[tesseract-urdf] ?= "Depends on tesseract-collision which depends on unavailable ROS_UNRESOLVED_DEP-bullet-extras"
PNBLACKLIST[tesseract-visualization] ?= "Depends on tesseract-environment which depends on tesseract-kinematics which depends on opw-kinematics which depends on unavailable ROS_UNRESOLVED_DEP-cmake-common-scripts"
PNBLACKLIST[thunder-line-follower-pmr3100] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[tile-map] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'x11', 'qt-gui-cpp'], 'Requires libqt-rosdev->qtbase which requires meta-qt5 to be included and depends on mapviz->(freeglut, libxmu, libxi) which require x11; qt-gui-cpp: depends on mapviz which rdepends on rqt-gui-cpp which depends on qt-gui-cpp which requires pyqt5-native for sip', '', d)}"
PNBLACKLIST[towr-ros] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'coinor-libipopt'], 'qt5: Requires rqt-bag->python-qt-binding which requires meta-qt5 to be included; coinor-libipopt: depends on towr->ifopt->unavailable ROS_UNRESOLVED_DEP-coinor-libipopt-dev', '', d)}"
PNBLACKLIST[towr] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'coinor-libipopt', 'Depends on ifopt->unavailable ROS_UNRESOLVED_DEP-coinor-libipopt-dev', '', d)}"
PNBLACKLIST[trac-ik-examples] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'trac-ik', 'Depends on trac-ik-lib->libnlopt0 which is not available', '', d)}"
PNBLACKLIST[trac-ik-kinematics-plugin] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'trac-ik', 'Depends on trac-ik-lib->libnlopt0 which is not available', '', d)}"
PNBLACKLIST[trac-ik-lib] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'trac-ik', 'Depends on libnlopt0 which is not available', '', d)}"
PNBLACKLIST[trac-ik-python] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'trac-ik', 'Depends on trac-ik-lib->libnlopt0 which is not available', '', d)}"
PNBLACKLIST[trac-ik] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'trac-ik', 'Depends on trac-ik-lib->libnlopt0 which is not available', '', d)}"
PNBLACKLIST[trajectory-tracker-rviz-plugins] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires qtbase which requires meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[tts] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['gst-ugly', 'python-gi'], 'gst-ugly: Depends on sound-play->gstreamer1.0-plugins-ugly which requires commercial license; python-gi: Depends on unavailable python-gi', '', d)}"
PNBLACKLIST[turtle-actionlib] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires turtlesim->qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[turtle-tf2] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires turtlesim->qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[turtle-tf] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires turtlesim->qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[turtlebot3-automatic-parking-vision] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[turtlebot3-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo which is not available', '', d)}"
PNBLACKLIST[turtlebot3-simulations] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, turtlebot3-gazebo which is not available', '', d)}"
PNBLACKLIST[turtlesim-dash-tutorial] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'Requires turtlesim->qtbase which requires meta-qt5 to be included; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[turtlesim] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'qt5-widgets'], 'qt5: depends on qtbase; qt5-widgets: needs widgets enabled in qtbase PACKAGECONFIG', '', d)}"
PNBLACKLIST[tuw-checkerboard] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'x11', 'depends on image-view->gtk+->x11', '', d)}"
PNBLACKLIST[tuw-marker-detection] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'x11', 'tuw-checkerboard->image-view->gtk+->x11', '', d)}"
PNBLACKLIST[ueye-cam] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ueye', 'ueye: expects users to install official IDS uEye drivers (http://en.ids-imaging.com/download-ueye.html)', '', d)}"
PNBLACKLIST[uos-common-urdf] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo-plugins which depends on gazebo which is not available', '', d)}"
PNBLACKLIST[uos-gazebo-tools] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on uos-gazebo-worlds which depend on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[uos-gazebo-worlds] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[uos-tools] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on uos-common-urdf, uos-gazebo-worlds which depend on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[urdf-sim-tutorial] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'gazebo'], 'Requires rviz which requires meta-qt5 to be included and rdepends on gazebo-ros-control which requires gazebo', '', d)}"
PNBLACKLIST[urdf-tutorial] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[usb-cam-controllers] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'usb-cam-controllers', 'usb-cam-controllers: do_compile task fails: usb-cam-controllers/0.0.4-r0/git/include/usb_cam_controllers/decoding_controllers.hpp:18:10: fatal error: libavcodec/avcodec.h: No such file or directory', '', d)}"
PNBLACKLIST[usb-cam] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['ffmpeg', 'x264'], 'ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license', '', d)}"
PNBLACKLIST[usv-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[uuv-control-utils] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-scipy', 'Rdepends on uuv-trajectory-control which rdepends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[uuv-descriptions] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[uuv-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-rosdev which is not available', '', d)}"
PNBLACKLIST[uuv-gazebo-ros-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-rosdev which is not available', '', d)}"
PNBLACKLIST[uuv-gazebo-worlds] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[uuv-sensor-ros-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-rosdev which is not available', '', d)}"
PNBLACKLIST[uuv-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, uuv-descriptions, uuv-gazebo-plugins, uuv-gazebo-ros-plugins, uuv-gazebo-worlds, uuv-sensor-ros-plugins, uuv-world-plugins, uuv-world-ros-plugins which is not available', '', d)}"
PNBLACKLIST[uuv-trajectory-control] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-scipy', 'Rdepends on unavailable ROS_UNRESOLVED_DEP-python-scipy', '', d)}"
PNBLACKLIST[uuv-world-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-rosdev which is not available', '', d)}"
PNBLACKLIST[uuv-world-ros-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-rosdev which is not available', '', d)}"
PNBLACKLIST[uwsim-bullet] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11'], 'Depends on freeglut which is not available because of missing opengl and libxext, freeglut which require x11 in DISTRO_FEATURES', '', d)}"
PNBLACKLIST[uwsim-osgbullet] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'osg'], 'Depends on uwsim-osgworks->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and depends on unavailable ROS_UNRESOLVED_DEP-libopenscenegraph', '', d)}"
PNBLACKLIST[uwsim-osgocean] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'osg'], 'Depends on mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and depends on unavailable ROS_UNRESOLVED_DEP-libopenscenegraph', '', d)}"
PNBLACKLIST[uwsim-osgworks] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'osg'], 'Depends on mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and depends on unavailable ROS_UNRESOLVED_DEP-libopenscenegraph', '', d)}"
PNBLACKLIST[uwsim] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'osg'], 'Depends on mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES and depends on osg-utils, osg-markers, osg-interactive-markers->unavailable ROS_UNRESOLVED_DEP-libopenscenegraph', '', d)}"
PNBLACKLIST[vapor-master] ?= "Depends on unavailable ROS_UNRESOLVED_DEP-npm-native"
PNBLACKLIST[velodyne-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[velodyne-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, velodyne-gazebo-plugins which is not available', '', d)}"
PNBLACKLIST[vision-visp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ogre', 'ogre: Depends on visp-bridge, visp-auto-tracker, visp-hand2eye-calibration, visp-tracker, visp-camera-calibration->ogre which is not available', '', d)}"
PNBLACKLIST[visp-auto-tracker] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ogre', 'ogre: Depends on visp->ogre which is not available', '', d)}"
PNBLACKLIST[visp-bridge] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ogre', 'ogre: Depends on visp->ogre which is not available', '', d)}"
PNBLACKLIST[visp-camera-calibration] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ogre', 'ogre: Depends on visp->ogre which is not available', '', d)}"
PNBLACKLIST[visp-hand2eye-calibration] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ogre', 'ogre: Depends on visp->ogre which is not available', '', d)}"
PNBLACKLIST[visp-tracker] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ogre', 'ogre: Depends on visp->ogre which is not available', '', d)}"
PNBLACKLIST[visp] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'ogre', 'ogre: Depends on ogre which is not available', '', d)}"
PNBLACKLIST[visualization-osg] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'osg', 'depends on osg-markers, osg-utils, osg-interactive-markers->unavailable ROS_UNRESOLVED_DEP-libopenscenegraph', '', d)}"
PNBLACKLIST[visualization-tutorials] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires (librviz-tutorial,rviz-python-tutorial,rviz-plugin-tutorials)->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[visualstates] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt5-bindings which is not available and python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[viz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'python-deps'], 'Requires rqt-robot-plugins->rqt-rviz->qtbase which requires meta-qt5 to be included and depends on rqt-robot-plugins->rqt-pose-view->unavailable ROS_UNRESOLVED_DEP-python-opengl, rqt-common-plugins->rqt-bag-plugins->unavailable ROS_UNRESOLVED_DEP-python-cairo', '', d)}"
PNBLACKLIST[voice-text] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['gst-ugly', 'nkf'], 'gst-ugly: Depends on sound-play->gstreamer1.0-plugins-ugly which requires commercial license; nkf: Depends on unavailable nkf', '', d)}"
PNBLACKLIST[vrx-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[wamv-description] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'wamv-description', 'wamv-description: do_compile task fails: wamv-description/1.3.0-1-r0/build/catkin_generated/env_cached.sh: 16: exec: xacro: not found', '', d)}"
PNBLACKLIST[wamv-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, hector-gazebo-plugins, gazebo-plugins, velodyne-gazebo-plugins, usv-gazebo-plugins which is not available', '', d)}"
PNBLACKLIST[warehouse-ros-mongo] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['mongodb', 'mongodb-legacy-cxx-driver'], 'Requires mongodb; mongodb-legacy-cxx-driver: requires unavailable mongo-cxx-driver-legacy', '', d)}"
PNBLACKLIST[warthog-desktop] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires warthog-viz->rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[warthog-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[warthog-simulator] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, warthog-gazebo which is not available', '', d)}"
PNBLACKLIST[warthog-viz] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'Requires rviz which requires pyqt5 for python-qt-bindings and meta-qt5 to be included; ogre: Requires rviz which depends on unavailable ogre', '', d)}"
PNBLACKLIST[wave-front-planner] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'vtk-qt'], 'qt5: depends on mesh-map which depends on mesh-client which depends on lvr2 which requires qtbase which requires meta-qt5 to be included; vtk-qt: depends on mesh-map which depends on mesh-client which depends on lvr2 which requires libvtk-qt which is not available', '', d)}"
PNBLACKLIST[wave-gazebo-plugins] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[wave-gazebo] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"
PNBLACKLIST[web-video-server] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['ffmpeg', 'x264'], 'ffmpeg: Depends on ffmpeg which requires commercial license; x264: Depends on ffmpeg which depends on x264 which requires commercial license', '', d)}"
PNBLACKLIST[webkit-dependency] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5'], 'Requires python-qt5-bindings-webkit which requires meta-qt5 to be included and python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[webots-ros] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['opengl', 'x11', 'qt5', 'pyqt5'], 'opengl: Depends on moveit-ros-planning-interface, moveit-ros-move-group which depen on moveit-ros-planning which depend on moveit-ros-perception->mesa which is not available because of missing opengl or vulkan in DISTRO_FEATURES; x11: Depends on moveit-ros-planning-interface, moveit-ros-move-group which depen on moveit-ros-planning which depend on moveit-ros-perception->freeglut which requires x11; qt5: requires ros-controllers->rqt-joint-trajectory-controller->rqt-gui-py->qt-gui->qtbase which requires meta-qt5 to be included; pyqt5: depends on ros-controllers->rqt-joint-trajectory-controller->rqt-gui-py->qt-gui->python-pyqt5 which requires pyqt5', '', d)}"
PNBLACKLIST[webrtc-ros] ?= "depends on webrtc which is blacklisted Fetches depot_tools during do_configure and then tries to use vpython which is not in dependencies"
PNBLACKLIST[webrtc] ?= "Fetches depot_tools during do_configure and then tries to use vpython which isn't in dependencies"
PNBLACKLIST[wge100-camera-firmware] ?= "Depends on unavailable ROS_UNRESOLVED_DEP-gforth"
PNBLACKLIST[wge100-driver] ?= "Depends on wge100-camera-firmware->unavailable ROS_UNRESOLVED_DEP-gforth"
PNBLACKLIST[wifi-ddwrt] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-mechanize', 'Depends on unavailable ROS_UNRESOLVED_DEP-python-mechanize', '', d)}"
PNBLACKLIST[wiimote] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'python-cwiid', 'Depends on unavailable ROS_UNRESOLVED_DEP-python-cwiid', '', d)}"
PNBLACKLIST[wu-ros-tools] ?= "${@bb.utils.contains_any('ROS_WORLD_SKIP_GROUPS', ['qt5', 'pyqt5', 'ogre'], 'qt5: pyqt5: Depends on easy-markers which depend on rviz which requires python-qt-binding which requires meta-qt5 to be included; ogre: depends on easy-markers whcih depends on rviz which depends on ogre which is not available', '', d)}"
PNBLACKLIST[yosemite-valley] ?= "${@bb.utils.contains('ROS_WORLD_SKIP_GROUPS', 'gazebo', 'Depends on gazebo, gazebo-ros which is not available', '', d)}"

# Renamed to fuse-ros in recipes-bbappends/fuse to avoid conflict with
# meta-filesystems/recipes-support/fuse/fuse_2.9.9.bb
BBMASK +=  "generated-recipes/fuse/fuse_0.4.2-1.bb"
# And renamed fuse-doc to fuse-ros-doc to avoid conflict with PN-doc package created by fuse recipe
BBMASK +=  "generated-recipes/fuse/fuse-doc_0.4.2-1.bb"
